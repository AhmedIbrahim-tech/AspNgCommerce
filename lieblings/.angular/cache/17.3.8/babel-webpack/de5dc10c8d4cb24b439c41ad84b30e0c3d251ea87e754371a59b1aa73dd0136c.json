{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// todo: split\n/** Provides default values for Pagination and pager components */\nconst _c0 = (a0, a1) => ({\n  \"pull-left\": a0,\n  \"float-left\": a1\n});\nconst _c1 = (a0, a1) => ({\n  \"pull-right\": a0,\n  \"float-right\": a1\n});\nconst _c2 = (a0, a1) => ({\n  disabled: a0,\n  currentPage: a1\n});\nconst _c3 = (a0, a1, a2) => ({\n  disabled: a0,\n  $implicit: a1,\n  currentPage: a2\n});\nfunction PaginationComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 11)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_1_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectPage(1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const defaultFirstTemplate_r3 = i0.ɵɵreference(13);\n    i0.ɵɵclassProp(\"disabled\", ctx_r1.noPrevious() || ctx_r1.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customFirstTemplate || defaultFirstTemplate_r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r1.noPrevious() || ctx_r1.disabled, ctx_r1.page));\n  }\n}\nfunction PaginationComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 14)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_2_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectPage(ctx_r1.page - 1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const defaultPreviousTemplate_r5 = i0.ɵɵreference(11);\n    i0.ɵɵclassProp(\"disabled\", ctx_r1.noPrevious() || ctx_r1.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customPreviousTemplate || defaultPreviousTemplate_r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r1.noPrevious() || ctx_r1.disabled, ctx_r1.page));\n  }\n}\nfunction PaginationComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_3_Template_a_click_1_listener($event) {\n      const pg_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectPage(pg_r7.number, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const pg_r7 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    const defaultPageTemplate_r8 = i0.ɵɵreference(7);\n    i0.ɵɵclassProp(\"active\", pg_r7.active)(\"disabled\", ctx_r1.disabled && !pg_r7.active);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customPageTemplate || defaultPageTemplate_r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(6, _c3, ctx_r1.disabled, pg_r7, ctx_r1.page));\n  }\n}\nfunction PaginationComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 16)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_4_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectPage(ctx_r1.page + 1, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const defaultNextTemplate_r10 = i0.ɵɵreference(9);\n    i0.ɵɵclassProp(\"disabled\", ctx_r1.noNext() || ctx_r1.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customNextTemplate || defaultNextTemplate_r10)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r1.noNext() || ctx_r1.disabled, ctx_r1.page));\n  }\n}\nfunction PaginationComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function PaginationComponent_li_5_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.selectPage(ctx_r1.totalPages, $event));\n    });\n    i0.ɵɵelementContainer(2, 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const defaultLastTemplate_r12 = i0.ɵɵreference(15);\n    i0.ɵɵclassProp(\"disabled\", ctx_r1.noNext() || ctx_r1.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customLastTemplate || defaultLastTemplate_r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(4, _c2, ctx_r1.noNext() || ctx_r1.disabled, ctx_r1.page));\n  }\n}\nfunction PaginationComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const page_r13 = ctx.$implicit;\n    i0.ɵɵtextInterpolate(page_r13.text);\n  }\n}\nfunction PaginationComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r1.getText(\"next\"));\n  }\n}\nfunction PaginationComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r1.getText(\"previous\"));\n  }\n}\nfunction PaginationComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r1.getText(\"first\"));\n  }\n}\nfunction PaginationComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r1.getText(\"last\"));\n  }\n}\nclass PaginationConfig {\n  constructor() {\n    this.main = {\n      itemsPerPage: 10,\n      boundaryLinks: false,\n      directionLinks: true,\n      firstText: 'First',\n      previousText: 'Previous',\n      nextText: 'Next',\n      lastText: 'Last',\n      pageBtnClass: '',\n      rotate: true\n    };\n    this.pager = {\n      itemsPerPage: 15,\n      previousText: '« Previous',\n      nextText: 'Next »',\n      pageBtnClass: '',\n      align: true\n    };\n  }\n  static #_ = this.ɵfac = function PaginationConfig_Factory(t) {\n    return new (t || PaginationConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: PaginationConfig,\n    factory: PaginationConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PagerComponent),\n  multi: true\n};\nclass PagerComponent {\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /** if `true` aligns each link to the sides of pager */\n    this.align = false;\n    /** if false first and last buttons will be hidden */\n    this.boundaryLinks = false;\n    /** if false previous and next buttons will be hidden */\n    this.directionLinks = true;\n    // labels\n    /** first button text */\n    this.firstText = 'First';\n    /** previous button text */\n    this.previousText = '« Previous';\n    /** next button text */\n    this.nextText = 'Next »';\n    /** last button text */\n    this.lastText = 'Last';\n    /** if true current page will in the middle of pages list */\n    this.rotate = true;\n    // css\n    /** add class to <code><li\\></code> */\n    this.pageBtnClass = '';\n    /** if true pagination component will be disabled */\n    this.disabled = false;\n    /** fired when total pages count changes, $event:number equals to total pages count */\n    this.numPages = new EventEmitter();\n    /** fired when page was changed, $event:{page, itemsPerPage} equals to\n     * object with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.classMap = '';\n    this.inited = false;\n    this._itemsPerPage = 15;\n    this._totalItems = 0;\n    this._totalPages = 0;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n    }\n  }\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /** total number of items in all pages */\n  get totalItems() {\n    return this._totalItems;\n  }\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  get totalPages() {\n    return this._totalPages;\n  }\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  getText(key) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return this[`${key}Text`] || this.config[`${key}Text`];\n  }\n  noPrevious() {\n    return this.page === 1;\n  }\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  getPages(currentPage, totalPages) {\n    const pages = [];\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  calculateTotalPages() {\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n  static #_ = this.ɵfac = function PagerComponent_Factory(t) {\n    return new (t || PagerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PaginationConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PagerComponent,\n    selectors: [[\"pager\"]],\n    inputs: {\n      align: \"align\",\n      maxSize: \"maxSize\",\n      boundaryLinks: \"boundaryLinks\",\n      directionLinks: \"directionLinks\",\n      firstText: \"firstText\",\n      previousText: \"previousText\",\n      nextText: \"nextText\",\n      lastText: \"lastText\",\n      rotate: \"rotate\",\n      pageBtnClass: \"pageBtnClass\",\n      disabled: \"disabled\",\n      itemsPerPage: \"itemsPerPage\",\n      totalItems: \"totalItems\"\n    },\n    outputs: {\n      numPages: \"numPages\",\n      pageChanged: \"pageChanged\"\n    },\n    features: [i0.ɵɵProvidersFeature([PAGER_CONTROL_VALUE_ACCESSOR])],\n    decls: 7,\n    vars: 24,\n    consts: [[1, \"pager\"], [3, \"ngClass\"], [\"href\", \"\", 3, \"click\"]],\n    template: function PagerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1)(2, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_2_listener($event) {\n          return ctx.selectPage(ctx.page - 1, $event);\n        });\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"li\", 1)(5, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function PagerComponent_Template_a_click_5_listener($event) {\n          return ctx.selectPage(ctx.page + 1, $event);\n        });\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.pageBtnClass);\n        i0.ɵɵclassProp(\"disabled\", ctx.noPrevious())(\"previous\", ctx.align);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(18, _c0, ctx.align, ctx.align));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.getText(\"previous\"));\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.pageBtnClass);\n        i0.ɵɵclassProp(\"disabled\", ctx.noNext())(\"next\", ctx.align);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(21, _c1, ctx.align, ctx.align));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.getText(\"next\"));\n      }\n    },\n    dependencies: [i2.NgClass],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pager',\n      providers: [PAGER_CONTROL_VALUE_ACCESSOR],\n      template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\"\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: PaginationConfig\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    align: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }]\n  });\n})();\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\nclass PaginationComponent {\n  constructor(elementRef, paginationConfig, changeDetection) {\n    this.elementRef = elementRef;\n    this.changeDetection = changeDetection;\n    /** if `true` aligns each link to the sides of pager */\n    this.align = true;\n    /** if false first and last buttons will be hidden */\n    this.boundaryLinks = false;\n    /** if false previous and next buttons will be hidden */\n    this.directionLinks = true;\n    /** if true current page will in the middle of pages list */\n    this.rotate = true;\n    // css\n    /** add class to <code><li\\></code> */\n    this.pageBtnClass = '';\n    /** if true pagination component will be disabled */\n    this.disabled = false;\n    /** fired when total pages count changes, $event:number equals to total pages count */\n    this.numPages = new EventEmitter();\n    /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n     * with current page index and number of items per page\n     */\n    this.pageChanged = new EventEmitter();\n    this.onChange = Function.prototype;\n    this.onTouched = Function.prototype;\n    this.classMap = '';\n    this.inited = false;\n    this._itemsPerPage = 10;\n    this._totalItems = 0;\n    this._totalPages = 0;\n    this._page = 1;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  get itemsPerPage() {\n    return this._itemsPerPage;\n  }\n  set itemsPerPage(v) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  /** total number of items in all pages */\n  get totalItems() {\n    return this._totalItems;\n  }\n  set totalItems(v) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n  get totalPages() {\n    return this._totalPages;\n  }\n  set totalPages(v) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n  configureOptions(config) {\n    this.config = Object.assign({}, config);\n  }\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n  writeValue(value) {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n  getText(key) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return this[`${key}Text`] || this.config[`${key}Text`];\n  }\n  noPrevious() {\n    return this.page === 1;\n  }\n  noNext() {\n    return this.page === this.totalPages;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  selectPage(page, event) {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n  // Create page object used in template\n  makePage(num, text, active) {\n    return {\n      text,\n      number: num,\n      active\n    };\n  }\n  getPages(currentPage, totalPages) {\n    const pages = [];\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n    return pages;\n  }\n  // base class\n  calculateTotalPages() {\n    const totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n  static #_ = this.ɵfac = function PaginationComponent_Factory(t) {\n    return new (t || PaginationComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PaginationConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PaginationComponent,\n    selectors: [[\"pagination\"]],\n    inputs: {\n      align: \"align\",\n      maxSize: \"maxSize\",\n      boundaryLinks: \"boundaryLinks\",\n      directionLinks: \"directionLinks\",\n      firstText: \"firstText\",\n      previousText: \"previousText\",\n      nextText: \"nextText\",\n      lastText: \"lastText\",\n      rotate: \"rotate\",\n      pageBtnClass: \"pageBtnClass\",\n      disabled: \"disabled\",\n      customPageTemplate: \"customPageTemplate\",\n      customNextTemplate: \"customNextTemplate\",\n      customPreviousTemplate: \"customPreviousTemplate\",\n      customFirstTemplate: \"customFirstTemplate\",\n      customLastTemplate: \"customLastTemplate\",\n      itemsPerPage: \"itemsPerPage\",\n      totalItems: \"totalItems\"\n    },\n    outputs: {\n      numPages: \"numPages\",\n      pageChanged: \"pageChanged\"\n    },\n    features: [i0.ɵɵProvidersFeature([PAGINATION_CONTROL_VALUE_ACCESSOR])],\n    decls: 16,\n    vars: 6,\n    consts: [[\"defaultPageTemplate\", \"\"], [\"defaultNextTemplate\", \"\"], [\"defaultPreviousTemplate\", \"\"], [\"defaultFirstTemplate\", \"\"], [\"defaultLastTemplate\", \"\"], [1, \"pagination\", 3, \"ngClass\"], [\"class\", \"pagination-first page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-prev page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-page page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pagination-next page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"pagination-last page-item\", 3, \"disabled\", 4, \"ngIf\"], [1, \"pagination-first\", \"page-item\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"pagination-prev\", \"page-item\"], [1, \"pagination-page\", \"page-item\"], [1, \"pagination-next\", \"page-item\"], [1, \"pagination-last\", \"page-item\"]],\n    template: function PaginationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 5);\n        i0.ɵɵtemplate(1, PaginationComponent_li_1_Template, 3, 7, \"li\", 6)(2, PaginationComponent_li_2_Template, 3, 7, \"li\", 7)(3, PaginationComponent_li_3_Template, 3, 10, \"li\", 8)(4, PaginationComponent_li_4_Template, 3, 7, \"li\", 9)(5, PaginationComponent_li_5_Template, 3, 7, \"li\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, PaginationComponent_ng_template_6_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(8, PaginationComponent_ng_template_8_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(10, PaginationComponent_ng_template_10_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(12, PaginationComponent_ng_template_12_Template, 1, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor)(14, PaginationComponent_ng_template_14_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.classMap);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationComponent, [{\n    type: Component,\n    args: [{\n      selector: 'pagination',\n      providers: [PAGINATION_CONTROL_VALUE_ACCESSOR],\n      template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\"\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: PaginationConfig\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    align: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    firstText: [{\n      type: Input\n    }],\n    previousText: [{\n      type: Input\n    }],\n    nextText: [{\n      type: Input\n    }],\n    lastText: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    pageBtnClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    customPageTemplate: [{\n      type: Input\n    }],\n    customNextTemplate: [{\n      type: Input\n    }],\n    customPreviousTemplate: [{\n      type: Input\n    }],\n    customFirstTemplate: [{\n      type: Input\n    }],\n    customLastTemplate: [{\n      type: Input\n    }],\n    numPages: [{\n      type: Output\n    }],\n    pageChanged: [{\n      type: Output\n    }],\n    itemsPerPage: [{\n      type: Input\n    }],\n    totalItems: [{\n      type: Input\n    }]\n  });\n})();\nclass PaginationModule {\n  static forRoot() {\n    return {\n      ngModule: PaginationModule,\n      providers: []\n    };\n  }\n  static #_ = this.ɵfac = function PaginationModule_Factory(t) {\n    return new (t || PaginationModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PaginationModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PaginationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [PagerComponent, PaginationComponent],\n      exports: [PagerComponent, PaginationComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","Input","Output","NgModule","NG_VALUE_ACCESSOR","i2","CommonModule","_c0","a0","a1","_c1","_c2","disabled","currentPage","_c3","a2","$implicit","PaginationComponent_li_1_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","PaginationComponent_li_1_Template_a_click_1_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","selectPage","ɵɵelementContainer","ɵɵelementEnd","defaultFirstTemplate_r3","ɵɵreference","ɵɵclassProp","noPrevious","ɵɵadvance","ɵɵproperty","customFirstTemplate","ɵɵpureFunction2","page","PaginationComponent_li_2_Template","_r4","PaginationComponent_li_2_Template_a_click_1_listener","defaultPreviousTemplate_r5","customPreviousTemplate","PaginationComponent_li_3_Template","_r6","PaginationComponent_li_3_Template_a_click_1_listener","pg_r7","number","defaultPageTemplate_r8","active","customPageTemplate","ɵɵpureFunction3","PaginationComponent_li_4_Template","_r9","PaginationComponent_li_4_Template_a_click_1_listener","defaultNextTemplate_r10","noNext","customNextTemplate","PaginationComponent_li_5_Template","_r11","PaginationComponent_li_5_Template_a_click_1_listener","totalPages","defaultLastTemplate_r12","customLastTemplate","PaginationComponent_ng_template_6_Template","ɵɵtext","page_r13","ɵɵtextInterpolate","text","PaginationComponent_ng_template_8_Template","getText","PaginationComponent_ng_template_10_Template","PaginationComponent_ng_template_12_Template","PaginationComponent_ng_template_14_Template","PaginationConfig","constructor","main","itemsPerPage","boundaryLinks","directionLinks","firstText","previousText","nextText","lastText","pageBtnClass","rotate","pager","align","_","ɵfac","PaginationConfig_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","PAGER_CONTROL_VALUE_ACCESSOR","provide","useExisting","PagerComponent","multi","elementRef","paginationConfig","changeDetection","numPages","pageChanged","onChange","Function","prototype","onTouched","classMap","inited","_itemsPerPage","_totalItems","_totalPages","_page","config","configureOptions","Object","assign","v","calculateTotalPages","totalItems","emit","value","_previous","markForCheck","ngOnInit","window","nativeElement","getAttribute","maxSize","pages","getPages","writeValue","key","registerOnChange","fn","registerOnTouched","event","preventDefault","target","blur","makePage","num","startPage","endPage","isMaxSized","Math","max","floor","ceil","min","toString","push","previousPageSet","unshift","nextPageSet","PagerComponent_Factory","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","features","ɵɵProvidersFeature","decls","vars","consts","template","PagerComponent_Template","PagerComponent_Template_a_click_2_listener","PagerComponent_Template_a_click_5_listener","ɵɵclassMap","dependencies","NgClass","encapsulation","selector","providers","PAGINATION_CONTROL_VALUE_ACCESSOR","PaginationComponent","PaginationComponent_Factory","PaginationComponent_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","NgForOf","NgIf","NgTemplateOutlet","PaginationModule","forRoot","ngModule","PaginationModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["C:/Users/Ahmed Eprahim/Desktop/Mine/AspNgCommerce/lieblings/node_modules/ngx-bootstrap/pagination/fesm2022/ngx-bootstrap-pagination.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// todo: split\n/** Provides default values for Pagination and pager components */\nclass PaginationConfig {\n    constructor() {\n        this.main = {\n            itemsPerPage: 10,\n            boundaryLinks: false,\n            directionLinks: true,\n            firstText: 'First',\n            previousText: 'Previous',\n            nextText: 'Next',\n            lastText: 'Last',\n            pageBtnClass: '',\n            rotate: true\n        };\n        this.pager = {\n            itemsPerPage: 15,\n            previousText: '« Previous',\n            nextText: 'Next »',\n            pageBtnClass: '',\n            align: true\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nconst PAGER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PagerComponent),\n    multi: true\n};\nclass PagerComponent {\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** if `true` aligns each link to the sides of pager */\n        this.align = false;\n        /** if false first and last buttons will be hidden */\n        this.boundaryLinks = false;\n        /** if false previous and next buttons will be hidden */\n        this.directionLinks = true;\n        // labels\n        /** first button text */\n        this.firstText = 'First';\n        /** previous button text */\n        this.previousText = '« Previous';\n        /** next button text */\n        this.nextText = 'Next »';\n        /** last button text */\n        this.lastText = 'Last';\n        /** if true current page will in the middle of pages list */\n        this.rotate = true;\n        // css\n        /** add class to <code><li\\></code> */\n        this.pageBtnClass = '';\n        /** if true pagination component will be disabled */\n        this.disabled = false;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to\n         * object with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.classMap = '';\n        this.inited = false;\n        this._itemsPerPage = 15;\n        this._totalItems = 0;\n        this._totalPages = 0;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(Object.assign({}, paginationConfig.main, paginationConfig.pager));\n        }\n    }\n    /** maximum number of items per page. If value less than 1 will display all items on one page */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /** total number of items in all pages */\n    get totalItems() {\n        return this._totalItems;\n    }\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    get page() {\n        return this._page;\n    }\n    set page(value) {\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        if (typeof this.maxSize === 'undefined') {\n            this.maxSize = this.config?.maxSize || 0;\n        }\n        if (typeof this.rotate === 'undefined') {\n            this.rotate = !!this.config?.rotate;\n        }\n        if (typeof this.boundaryLinks === 'undefined') {\n            this.boundaryLinks = !!this.config?.boundaryLinks;\n        }\n        if (typeof this.directionLinks === 'undefined') {\n            this.directionLinks = !!this.config?.directionLinks;\n        }\n        if (typeof this.pageBtnClass === 'undefined') {\n            this.pageBtnClass = this.config?.pageBtnClass || '';\n        }\n        // base class\n        if (typeof this.itemsPerPage === 'undefined') {\n            this.itemsPerPage = this.config?.itemsPerPage || 0;\n        }\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    getText(key) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this[`${key}Text`] || this.config[`${key}Text`];\n    }\n    noPrevious() {\n        return this.page === 1;\n    }\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    getPages(currentPage, totalPages) {\n        const pages = [];\n        // Default page limits\n        let startPage = 1;\n        let endPage = totalPages;\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized && this.maxSize) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    calculateTotalPages() {\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PagerComponent, deps: [{ token: i0.ElementRef }, { token: PaginationConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.1\", type: PagerComponent, selector: \"pager\", inputs: { align: \"align\", maxSize: \"maxSize\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", rotate: \"rotate\", pageBtnClass: \"pageBtnClass\", disabled: \"disabled\", itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, providers: [PAGER_CONTROL_VALUE_ACCESSOR], ngImport: i0, template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PagerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'pager', providers: [PAGER_CONTROL_VALUE_ACCESSOR], template: \"<ul class=\\\"pager\\\">\\n  <li [class.disabled]=\\\"noPrevious()\\\" [class.previous]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-left': align, 'float-left': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page - 1, $event)\\\">{{ getText('previous') }}</a>\\n  </li>\\n  <li [class.disabled]=\\\"noNext()\\\" [class.next]=\\\"align\\\"\\n      [ngClass]=\\\"{'pull-right': align, 'float-right': align}\\\"\\n      class=\\\"{{ pageBtnClass }}\\\">\\n    <a href (click)=\\\"selectPage(page + 1, $event)\\\">{{ getText('next') }}</a>\\n  </li>\\n</ul>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: PaginationConfig }, { type: i0.ChangeDetectorRef }], propDecorators: { align: [{\n                type: Input\n            }], maxSize: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], firstText: [{\n                type: Input\n            }], previousText: [{\n                type: Input\n            }], nextText: [{\n                type: Input\n            }], lastText: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], pageBtnClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], numPages: [{\n                type: Output\n            }], pageChanged: [{\n                type: Output\n            }], itemsPerPage: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }] } });\n\nconst PAGINATION_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PaginationComponent),\n    multi: true\n};\nclass PaginationComponent {\n    constructor(elementRef, paginationConfig, changeDetection) {\n        this.elementRef = elementRef;\n        this.changeDetection = changeDetection;\n        /** if `true` aligns each link to the sides of pager */\n        this.align = true;\n        /** if false first and last buttons will be hidden */\n        this.boundaryLinks = false;\n        /** if false previous and next buttons will be hidden */\n        this.directionLinks = true;\n        /** if true current page will in the middle of pages list */\n        this.rotate = true;\n        // css\n        /** add class to <code><li\\></code> */\n        this.pageBtnClass = '';\n        /** if true pagination component will be disabled */\n        this.disabled = false;\n        /** fired when total pages count changes, $event:number equals to total pages count */\n        this.numPages = new EventEmitter();\n        /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n         * with current page index and number of items per page\n         */\n        this.pageChanged = new EventEmitter();\n        this.onChange = Function.prototype;\n        this.onTouched = Function.prototype;\n        this.classMap = '';\n        this.inited = false;\n        this._itemsPerPage = 10;\n        this._totalItems = 0;\n        this._totalPages = 0;\n        this._page = 1;\n        this.elementRef = elementRef;\n        if (!this.config) {\n            this.configureOptions(paginationConfig.main);\n        }\n    }\n    /** maximum number of items per page. If value less than 1 will display all items on one page */\n    get itemsPerPage() {\n        return this._itemsPerPage;\n    }\n    set itemsPerPage(v) {\n        this._itemsPerPage = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    /** total number of items in all pages */\n    get totalItems() {\n        return this._totalItems;\n    }\n    set totalItems(v) {\n        this._totalItems = v;\n        this.totalPages = this.calculateTotalPages();\n    }\n    get totalPages() {\n        return this._totalPages;\n    }\n    set totalPages(v) {\n        this._totalPages = v;\n        this.numPages.emit(v);\n        if (this.inited) {\n            this.selectPage(this.page);\n        }\n    }\n    get page() {\n        return this._page;\n    }\n    set page(value) {\n        const _previous = this._page;\n        this._page = value > this.totalPages ? this.totalPages : value || 1;\n        this.changeDetection.markForCheck();\n        if (_previous === this._page || typeof _previous === 'undefined') {\n            return;\n        }\n        this.pageChanged.emit({\n            page: this._page,\n            itemsPerPage: this.itemsPerPage\n        });\n    }\n    configureOptions(config) {\n        this.config = Object.assign({}, config);\n    }\n    ngOnInit() {\n        if (typeof window !== 'undefined') {\n            this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n        }\n        // watch for maxSize\n        if (typeof this.maxSize === 'undefined') {\n            this.maxSize = this.config?.maxSize || 0;\n        }\n        if (typeof this.rotate === 'undefined') {\n            this.rotate = !!this.config?.rotate;\n        }\n        if (typeof this.boundaryLinks === 'undefined') {\n            this.boundaryLinks = !!this.config?.boundaryLinks;\n        }\n        if (typeof this.directionLinks === 'undefined') {\n            this.directionLinks = !!this.config?.directionLinks;\n        }\n        if (typeof this.pageBtnClass === 'undefined') {\n            this.pageBtnClass = this.config?.pageBtnClass || '';\n        }\n        // base class\n        if (typeof this.itemsPerPage === 'undefined') {\n            this.itemsPerPage = this.config?.itemsPerPage || 0;\n        }\n        this.totalPages = this.calculateTotalPages();\n        // this class\n        this.pages = this.getPages(this.page, this.totalPages);\n        this.inited = true;\n    }\n    writeValue(value) {\n        this.page = value;\n        this.pages = this.getPages(this.page, this.totalPages);\n    }\n    getText(key) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this[`${key}Text`] || this.config[`${key}Text`];\n    }\n    noPrevious() {\n        return this.page === 1;\n    }\n    noNext() {\n        return this.page === this.totalPages;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    selectPage(page, event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!this.disabled) {\n            if (event && event.target) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const target = event.target;\n                target.blur();\n            }\n            this.writeValue(page);\n            this.onChange(this.page);\n        }\n    }\n    // Create page object used in template\n    makePage(num, text, active) {\n        return { text, number: num, active };\n    }\n    getPages(currentPage, totalPages) {\n        const pages = [];\n        // Default page limits\n        let startPage = 1;\n        let endPage = totalPages;\n        const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n        // recompute if maxSize\n        if (isMaxSized && this.maxSize) {\n            if (this.rotate) {\n                // Current page is displayed in the middle of the visible ones\n                startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n                endPage = startPage + this.maxSize - 1;\n                // Adjust if limit is exceeded\n                if (endPage > totalPages) {\n                    endPage = totalPages;\n                    startPage = endPage - this.maxSize + 1;\n                }\n            }\n            else {\n                // Visible pages are paginated with maxSize\n                startPage =\n                    (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n                // Adjust last page if limit is exceeded\n                endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n            }\n        }\n        // Add page number links\n        for (let num = startPage; num <= endPage; num++) {\n            const page = this.makePage(num, num.toString(), num === currentPage);\n            pages.push(page);\n        }\n        // Add links to move between page sets\n        if (isMaxSized && !this.rotate) {\n            if (startPage > 1) {\n                const previousPageSet = this.makePage(startPage - 1, '...', false);\n                pages.unshift(previousPageSet);\n            }\n            if (endPage < totalPages) {\n                const nextPageSet = this.makePage(endPage + 1, '...', false);\n                pages.push(nextPageSet);\n            }\n        }\n        return pages;\n    }\n    // base class\n    calculateTotalPages() {\n        const totalPages = this.itemsPerPage < 1\n            ? 1\n            : Math.ceil(this.totalItems / this.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationComponent, deps: [{ token: i0.ElementRef }, { token: PaginationConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.0.1\", type: PaginationComponent, selector: \"pagination\", inputs: { align: \"align\", maxSize: \"maxSize\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", firstText: \"firstText\", previousText: \"previousText\", nextText: \"nextText\", lastText: \"lastText\", rotate: \"rotate\", pageBtnClass: \"pageBtnClass\", disabled: \"disabled\", customPageTemplate: \"customPageTemplate\", customNextTemplate: \"customNextTemplate\", customPreviousTemplate: \"customPreviousTemplate\", customFirstTemplate: \"customFirstTemplate\", customLastTemplate: \"customLastTemplate\", itemsPerPage: \"itemsPerPage\", totalItems: \"totalItems\" }, outputs: { numPages: \"numPages\", pageChanged: \"pageChanged\" }, providers: [PAGINATION_CONTROL_VALUE_ACCESSOR], ngImport: i0, template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'pagination', providers: [PAGINATION_CONTROL_VALUE_ACCESSOR], template: \"<ul class=\\\"pagination\\\" [ngClass]=\\\"classMap\\\">\\n  <li class=\\\"pagination-first page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customFirstTemplate || defaultFirstTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-prev page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noPrevious() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page - 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPreviousTemplate || defaultPreviousTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noPrevious() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li *ngFor=\\\"let pg of pages\\\"\\n      [class.active]=\\\"pg.active\\\"\\n      [class.disabled]=\\\"disabled && !pg.active\\\"\\n      class=\\\"pagination-page page-item\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(pg.number, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customPageTemplate || defaultPageTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pg, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-next page-item\\\"\\n      *ngIf=\\\"directionLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(page + 1, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customNextTemplate || defaultNextTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n\\n  <li class=\\\"pagination-last page-item\\\"\\n      *ngIf=\\\"boundaryLinks\\\"\\n      [class.disabled]=\\\"noNext() || disabled\\\">\\n    <a class=\\\"page-link\\\" href (click)=\\\"selectPage(totalPages, $event)\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"customLastTemplate || defaultLastTemplate\\\"\\n                   [ngTemplateOutletContext]=\\\"{disabled: noNext() || disabled, currentPage: page}\\\">\\n      </ng-container>\\n    </a>\\n  </li>\\n</ul>\\n\\n<ng-template #defaultPageTemplate let-page>{{ page.text }}</ng-template>\\n\\n<ng-template #defaultNextTemplate>{{ getText('next') }}</ng-template>\\n\\n<ng-template #defaultPreviousTemplate>{{ getText('previous') }}</ng-template>\\n\\n<ng-template #defaultFirstTemplate>{{ getText('first') }}</ng-template>\\n\\n<ng-template #defaultLastTemplate>{{ getText('last') }}</ng-template>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: PaginationConfig }, { type: i0.ChangeDetectorRef }], propDecorators: { align: [{\n                type: Input\n            }], maxSize: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], firstText: [{\n                type: Input\n            }], previousText: [{\n                type: Input\n            }], nextText: [{\n                type: Input\n            }], lastText: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], pageBtnClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], customPageTemplate: [{\n                type: Input\n            }], customNextTemplate: [{\n                type: Input\n            }], customPreviousTemplate: [{\n                type: Input\n            }], customFirstTemplate: [{\n                type: Input\n            }], customLastTemplate: [{\n                type: Input\n            }], numPages: [{\n                type: Output\n            }], pageChanged: [{\n                type: Output\n            }], itemsPerPage: [{\n                type: Input\n            }], totalItems: [{\n                type: Input\n            }] } });\n\nclass PaginationModule {\n    static forRoot() {\n        return { ngModule: PaginationModule, providers: [] };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationModule, declarations: [PagerComponent, PaginationComponent], imports: [CommonModule], exports: [PagerComponent, PaginationComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.1\", ngImport: i0, type: PaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [PagerComponent, PaginationComponent],\n                    exports: [PagerComponent, PaginationComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PagerComponent, PaginationComponent, PaginationConfig, PaginationModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}