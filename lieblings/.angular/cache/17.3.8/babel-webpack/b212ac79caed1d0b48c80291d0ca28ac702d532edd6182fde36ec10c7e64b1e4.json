{"ast":null,"code":"import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ANIMATION_MODULE_TYPE, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nconst _c2 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c3 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatDrawerContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatDrawerContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-drawer-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c5 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nfunction MatSidenavContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatSidenavContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c6 = \".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [\n  // We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n  constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._container = _container;\n  }\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  static #_ = this.ɵfac = function MatDrawerContent_Factory(t) {\n    return new (t || MatDrawerContent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContent,\n    selectors: [[\"mat-drawer-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\"],\n    hostVars: 4,\n    hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatDrawerContent\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatDrawerContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatDrawerContent\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: MatDrawerContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => MatDrawerContainer)]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n  /** The side that the drawer is attached to. */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value !== this._position) {\n      // Static inputs in Ivy are set before the element is in the DOM.\n      if (this._isAttached) {\n        this._updatePositionInParent(value);\n      }\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  get disableClose() {\n    return this._disableClose;\n  }\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n   * instead.\n   */\n  get autoFocus() {\n    const value = this._autoFocus;\n    // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n    // because we don't know how the sidenav is being used, but in some cases it still makes\n    // sense to do it. The consumer can explicitly set `autoFocus`.\n    if (value == null) {\n      if (this.mode === 'side') {\n        return 'dialog';\n      } else {\n        return 'first-tabbable';\n      }\n    }\n    return value;\n  }\n  set autoFocus(value) {\n    if (value === 'true' || value === 'false' || value == null) {\n      value = coerceBooleanProperty(value);\n    }\n    this._autoFocus = value;\n  }\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  get opened() {\n    return this._opened;\n  }\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._interactivityChecker = _interactivityChecker;\n    this._doc = _doc;\n    this._container = _container;\n    this._focusTrap = null;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /** Whether the drawer is initialized. Used for disabling the initial animation. */\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._opened = false;\n    /** Emits whenever the drawer has started animating. */\n    this._animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n    this._animationEnd = new Subject();\n    /** Current state of the sidenav animation. */\n    this._animationState = 'void';\n    /** Event emitted when the drawer open state is changed. */\n    this.openedChange =\n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter( /* isAsync */true);\n    /** Event emitted when the drawer has been opened. */\n    this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n    /** Event emitted when the drawer has started opening. */\n    this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n    this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n    /** Event emitted when the drawer has started closing. */\n    this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n    this._modeChanged = new Subject();\n    this.openedChange.subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n        }\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus(this._openedVia || 'program');\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n    });\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      const {\n        fromState,\n        toState\n      } = event;\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        this.openedChange.emit(this._opened);\n      }\n    });\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          element.removeEventListener('blur', callback);\n          element.removeEventListener('mousedown', callback);\n          element.removeAttribute('tabindex');\n        };\n        element.addEventListener('blur', callback);\n        element.addEventListener('mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n  _takeFocus() {\n    if (!this._focusTrap) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    // When autoFocus is not on the sidenav, if the element cannot be focused or does\n    // not exist, focus the sidenav itself so the keyboard navigation still works.\n    // We need to check that `focus` is a function due to Universal.\n    switch (this.autoFocus) {\n      case false:\n      case 'dialog':\n        return;\n      case true:\n      case 'first-tabbable':\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n          if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n            element.focus();\n          }\n        });\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this.autoFocus);\n        break;\n    }\n  }\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n  _restoreFocus(focusOrigin) {\n    if (this.autoFocus === 'dialog') {\n      return;\n    }\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n    this._elementFocusedBeforeDrawerWasOpened = null;\n  }\n  /** Whether focus is currently within the drawer. */\n  _isFocusWithinDrawer() {\n    const activeEl = this._doc.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n  ngAfterViewInit() {\n    this._isAttached = true;\n    // Only update the DOM position when the sidenav is positioned at\n    // the end since we project the sidenav before the content by default.\n    if (this._position === 'end') {\n      this._updatePositionInParent('end');\n    }\n    // Needs to happen after the position is updated\n    // so the focus trap anchors are in the right place.\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      this._updateFocusTrapState();\n    }\n  }\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n  ngOnDestroy() {\n    this._focusTrap?.destroy();\n    this._anchor?.remove();\n    this._anchor = null;\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /** Close the drawer. */\n  close() {\n    return this.toggle(false);\n  }\n  /** Closes the drawer with context that the backdrop was clicked. */\n  _closeViaBackdropClick() {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurs the active element.\n    return this._setOpen( /* isOpen */false, /* restoreFocus */true, 'mouse');\n  }\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen = !this.opened, openedVia) {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    if (isOpen && openedVia) {\n      this._openedVia = openedVia;\n    }\n    const result = this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n    if (!isOpen) {\n      this._openedVia = null;\n    }\n    return result;\n  }\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param focusOrigin Origin to use when restoring focus.\n   */\n  _setOpen(isOpen, restoreFocus, focusOrigin) {\n    this._opened = isOpen;\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n    } else {\n      this._animationState = 'void';\n      if (restoreFocus) {\n        this._restoreFocus(focusOrigin);\n      }\n    }\n    this._updateFocusTrapState();\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  _getWidth() {\n    return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n  }\n  /** Updates the enabled state of the focus trap. */\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n      // sidenav content.\n      this._focusTrap.enabled = !!this._container?.hasBackdrop;\n    }\n  }\n  /**\n   * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n   * when it's in the `end` position so that it comes after the content and the visual order\n   * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n   * started off as `end` and was changed to `start`.\n   */\n  _updatePositionInParent(newPosition) {\n    // Don't move the DOM node around on the server, because it can throw off hydration.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    const parent = element.parentNode;\n    if (newPosition === 'end') {\n      if (!this._anchor) {\n        this._anchor = this._doc.createComment('mat-drawer-anchor');\n        parent.insertBefore(this._anchor, element);\n      }\n      parent.appendChild(element);\n    } else if (this._anchor) {\n      this._anchor.parentNode.insertBefore(element, this._anchor);\n    }\n  }\n  static #_ = this.ɵfac = function MatDrawer_Factory(t) {\n    return new (t || MatDrawer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusTrapFactory), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.InteractivityChecker), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawer,\n    selectors: [[\"mat-drawer\"]],\n    viewQuery: function MatDrawer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n      }\n    },\n    hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n    hostVars: 12,\n    hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n          return ctx._animationStarted.next($event);\n        })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n          return ctx._animationEnd.next($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        i0.ɵɵattribute(\"align\", null);\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n      }\n    },\n    inputs: {\n      position: \"position\",\n      mode: \"mode\",\n      disableClose: \"disableClose\",\n      autoFocus: \"autoFocus\",\n      opened: \"opened\"\n    },\n    outputs: {\n      openedChange: \"openedChange\",\n      _openedStream: \"opened\",\n      openedStart: \"openedStart\",\n      _closedStream: \"closed\",\n      closedStart: \"closedStart\",\n      onPositionChanged: \"positionChanged\"\n    },\n    exportAs: [\"matDrawer\"],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatDrawer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    data: {\n      animation: [matDrawerAnimations.transformDrawer]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        'tabIndex': '-1',\n        '[@transform]': '_animationState',\n        '(@transform.start)': '_animationStarted.next($event)',\n        '(@transform.done)': '_animationEnd.next($event)'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [CdkScrollable],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i2.FocusTrapFactory\n  }, {\n    type: i2.FocusMonitor\n  }, {\n    type: i3.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.InteractivityChecker\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: MatDrawerContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DRAWER_CONTAINER]\n    }]\n  }], {\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    _content: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n  /** The drawer child with the `start` position. */\n  get start() {\n    return this._start;\n  }\n  /** The drawer child with the `end` position. */\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  get autosize() {\n    return this._autosize;\n  }\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  get hasBackdrop() {\n    return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n  }\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** Drawers that belong to this container. */\n    this._drawers = new QueryList();\n    /** Event emitted when the drawer backdrop is clicked. */\n    this.backdropClick = new EventEmitter();\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject();\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n        this.updateContentMargins();\n      });\n    }\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    this._autosize = defaultAutosize;\n  }\n  ngAfterContentInit() {\n    this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n      this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n      this._drawers.notifyOnChanges();\n    });\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n    // Avoid hitting the NgZone through the debounce timeout.\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject.pipe(debounceTime(10),\n      // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    });\n  }\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._drawers.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Calls `open` of both start and end drawers */\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /** Calls `close` of both start and end drawers */\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode == 'push') {\n        const width = this._left._getWidth();\n        left += width;\n        right -= width;\n      }\n    }\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode == 'push') {\n        const width = this._right._getWidth();\n        right += width;\n        left -= width;\n      }\n    }\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null;\n    right = right || null;\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      };\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(filter(event => event.fromState !== event.toState), takeUntil(this._drawers.changes)).subscribe(event => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n        this._element.nativeElement.classList.add('mat-drawer-transition');\n      }\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  _watchDrawerPosition(drawer) {\n    if (!drawer) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n        this._validateDrawers();\n      });\n    });\n  }\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  _watchDrawerMode(drawer) {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  _setContainerClass(isAdd) {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /** Validate the state of the drawer children components. */\n  _validateDrawers() {\n    this._start = this._end = null;\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n    this._right = this._left = null;\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawersViaBackdrop();\n  }\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n  }\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start) || this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end);\n  }\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n  // Whether argument drawer should have a backdrop when it opens\n  _drawerHasBackdrop(drawer) {\n    if (this._backdropOverride == null) {\n      return !!drawer && drawer.mode !== 'side';\n    }\n    return this._backdropOverride;\n  }\n  static #_ = this.ɵfac = function MatDrawerContainer_Factory(t) {\n    return new (t || MatDrawerContainer)(i0.ɵɵdirectiveInject(i4.Directionality, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatDrawerContainer,\n    selectors: [[\"mat-drawer-container\"]],\n    contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatDrawerContent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\"],\n    hostVars: 2,\n    hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    inputs: {\n      autosize: \"autosize\",\n      hasBackdrop: \"hasBackdrop\"\n    },\n    outputs: {\n      backdropClick: \"backdropClick\"\n    },\n    exportAs: [\"matDrawerContainer\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatDrawerContainer\n    }]), i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatDrawerContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c2);\n        i0.ɵɵtemplate(0, MatDrawerContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵtemplate(3, MatDrawerContainer_Conditional_3_Template, 2, 0, \"mat-drawer-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(0, ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(3, !ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatDrawerContent],\n    styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      standalone: true,\n      imports: [MatDrawerContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], () => [{\n    type: i4.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    backdropClick: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSidenavContent extends MatDrawerContent {\n  constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n  static #_ = this.ɵfac = function MatSidenavContent_Factory(t) {\n    return new (t || MatSidenavContent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContent,\n    selectors: [[\"mat-sidenav-content\"]],\n    hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n    hostVars: 4,\n    hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: CdkScrollable,\n      useExisting: MatSidenavContent\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatSidenavContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatSidenavContent\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: MatSidenavContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => MatSidenavContainer)]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\nclass MatSidenav extends MatDrawer {\n  constructor() {\n    super(...arguments);\n    this._fixedInViewport = false;\n    this._fixedTopGap = 0;\n    this._fixedBottomGap = 0;\n  }\n  /** Whether the sidenav is fixed in the viewport. */\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenav_BaseFactory;\n    return function MatSidenav_Factory(t) {\n      return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n    };\n  })();\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenav,\n    selectors: [[\"mat-sidenav\"]],\n    hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n    hostVars: 17,\n    hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"align\", null);\n        i0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n      }\n    },\n    inputs: {\n      fixedInViewport: \"fixedInViewport\",\n      fixedTopGap: \"fixedTopGap\",\n      fixedBottomGap: \"fixedBottomGap\"\n    },\n    exportAs: [\"matSidenav\"],\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n    template: function MatSidenav_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [CdkScrollable],\n    encapsulation: 2,\n    data: {\n      animation: [matDrawerAnimations.transformDrawer]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [CdkScrollable],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\nclass MatSidenavContainer extends MatDrawerContainer {\n  constructor() {\n    super(...arguments);\n    this._allDrawers = undefined;\n    // We need an initializer here to avoid a TS error.\n    this._content = undefined;\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */(() => {\n    let ɵMatSidenavContainer_BaseFactory;\n    return function MatSidenavContainer_Factory(t) {\n      return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n    };\n  })();\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatSidenavContainer,\n    selectors: [[\"mat-sidenav-container\"]],\n    contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n    hostVars: 2,\n    hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n      }\n    },\n    exportAs: [\"matSidenavContainer\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DRAWER_CONTAINER,\n      useExisting: MatSidenavContainer\n    }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c5,\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n    template: function MatSidenavContainer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵtemplate(0, MatSidenavContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵtemplate(3, MatSidenavContainer_Conditional_3_Template, 2, 0, \"mat-sidenav-content\");\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(0, ctx.hasBackdrop ? 0 : -1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(3, !ctx._content ? 3 : -1);\n      }\n    },\n    dependencies: [MatSidenavContent],\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }],\n      standalone: true,\n      imports: [MatSidenavContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\nclass MatSidenavModule {\n  static #_ = this.ɵfac = function MatSidenavModule_Factory(t) {\n    return new (t || MatSidenavModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatSidenavModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkScrollableModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };","map":{"version":3,"names":["i1","CdkScrollable","CdkScrollableModule","i0","InjectionToken","forwardRef","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","EventEmitter","Optional","Input","Output","ViewChild","QueryList","ANIMATION_MODULE_TYPE","ContentChildren","ContentChild","NgModule","MatCommonModule","i2","i4","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","i3","DOCUMENT","Subject","fromEvent","merge","filter","map","mapTo","takeUntil","distinctUntilChanged","take","startWith","debounceTime","trigger","state","style","transition","animate","_c0","_c1","_c2","_c3","MatDrawerContainer_Conditional_0_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatDrawerContainer_Conditional_0_Template_div_click_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_onBackdropClicked","ɵɵelementEnd","ɵɵclassProp","_isShowingBackdrop","MatDrawerContainer_Conditional_3_Template","ɵɵprojection","_c4","_c5","MatSidenavContainer_Conditional_0_Template","MatSidenavContainer_Conditional_0_Template_div_click_0_listener","MatSidenavContainer_Conditional_3_Template","_c6","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","Error","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","factory","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","constructor","_changeDetectorRef","_container","elementRef","scrollDispatcher","ngZone","ngAfterContentInit","_contentMarginChanges","subscribe","markForCheck","_","ɵfac","MatDrawerContent_Factory","t","ɵɵdirectiveInject","ChangeDetectorRef","MatDrawerContainer","ElementRef","ScrollDispatcher","NgZone","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","MatDrawerContent_HostBindings","ɵɵstyleProp","_contentMargins","left","right","standalone","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","template","MatDrawerContent_Template","ɵɵprojectionDef","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","OnPush","None","providers","decorators","MatDrawer","_position","value","_isAttached","_updatePositionInParent","onPositionChanged","emit","mode","_mode","_updateFocusTrapState","_modeChanged","next","disableClose","_disableClose","autoFocus","_autoFocus","opened","_opened","toggle","_elementRef","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_interactivityChecker","_doc","_focusTrap","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","pipe","o","openedStart","e","fromState","toState","indexOf","undefined","_closedStream","closedStart","_destroyed","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","_openedVia","runOutsideAngular","nativeElement","event","keyCode","run","close","stopPropagation","preventDefault","x","y","_forceFocus","element","options","isFocusable","tabIndex","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","elementToFocus","querySelector","focusInitialElementWhenReady","then","hasMovedFocus","focusOrigin","focusVia","blur","activeEl","contains","ngAfterViewInit","isBrowser","create","ngAfterContentChecked","ngOnDestroy","destroy","_anchor","remove","complete","open","openedVia","_closeViaBackdropClick","_setOpen","isOpen","result","restoreFocus","Promise","resolve","_getWidth","offsetWidth","enabled","hasBackdrop","newPosition","parent","parentNode","createComment","insertBefore","appendChild","MatDrawer_Factory","FocusTrapFactory","FocusMonitor","Platform","InteractivityChecker","viewQuery","MatDrawer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_content","first","MatDrawer_HostBindings","ɵɵsyntheticHostListener","MatDrawer_animation_transform_start_HostBindingHandler","$event","MatDrawer_animation_transform_done_HostBindingHandler","ɵɵsyntheticHostProperty","ɵɵattribute","inputs","outputs","exportAs","consts","MatDrawer_Template","dependencies","data","animation","animations","imports","start","_start","end","_end","autosize","_autosize","_drawerHasBackdrop","_backdropOverride","scrollable","_userContent","_dir","_element","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_allDrawers","changes","drawer","reset","item","notifyOnChanges","forEach","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","length","_isDrawerOpen","_left","width","_right","ngDoCheck","_isPushed","classList","add","_setContainerClass","onMicrotaskEmpty","isAdd","className","_closeModalDrawersViaBackdrop","MatDrawerContainer_Factory","Directionality","ViewportRuler","contentQueries","MatDrawerContainer_ContentQueries","dirIndex","ɵɵcontentQuery","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","MatDrawerContainer_Template","ɵɵtemplate","ɵɵconditional","ɵɵadvance","styles","descendants","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","arguments","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","ɵMatSidenav_BaseFactory","MatSidenav_Factory","ɵɵgetInheritedFactory","MatSidenav_HostBindings","MatSidenav_Template","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_Factory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","exports"],"sources":["C:/Users/Ahmed Eprahim/Desktop/Mine/AspNgCommerce/lieblings/node_modules/@angular/material/fesm2022/sidenav.mjs"],"sourcesContent":["import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ANIMATION_MODULE_TYPE, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDrawerContent, isStandalone: true, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatDrawerContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatDrawerContent,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatDrawerContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }] });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            // Static inputs in Ivy are set before the element is in the DOM.\n            if (this._isAttached) {\n                this._updatePositionInParent(value);\n            }\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._focusTrap = null;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        const activeEl = this._doc.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n        this._isAttached = true;\n        // Only update the DOM position when the sidenav is positioned at\n        // the end since we project the sidenav before the content by default.\n        if (this._position === 'end') {\n            this._updatePositionInParent('end');\n        }\n        // Needs to happen after the position is updated\n        // so the focus trap anchors are in the right place.\n        if (this._platform.isBrowser) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n            this._updateFocusTrapState();\n        }\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        this._focusTrap?.destroy();\n        this._anchor?.remove();\n        this._anchor = null;\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n            // sidenav content.\n            this._focusTrap.enabled = !!this._container?.hasBackdrop;\n        }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n        // Don't move the DOM node around on the server, because it can throw off hydration.\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        const parent = element.parentNode;\n        if (newPosition === 'end') {\n            if (!this._anchor) {\n                this._anchor = this._doc.createComment('mat-drawer-anchor');\n                parent.insertBefore(this._anchor, element);\n            }\n            parent.appendChild(element);\n        }\n        else if (this._anchor) {\n            this._anchor.parentNode.insertBefore(element, this._anchor);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatDrawer, isStandalone: true, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, viewQueries: [{ propertyName: \"_content\", first: true, predicate: [\"content\"], descendants: true }], exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [CdkScrollable], template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDrawerContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DRAWER_CONTAINER]\n                }] }], propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }], _content: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end)));\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n    // Whether argument drawer should have a backdrop when it opens\n    _drawerHasBackdrop(drawer) {\n        if (this._backdropOverride == null) {\n            return !!drawer && drawer.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatDrawerContainer, isStandalone: true, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"component\", type: MatDrawerContent, selector: \"mat-drawer-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], standalone: true, imports: [MatDrawerContent], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], ctorParameters: () => [{ type: i4.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatSidenavContent, isStandalone: true, selector: \"mat-sidenav-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, providers: [\n            {\n                provide: CdkScrollable,\n                useExisting: MatSidenavContent,\n            },\n        ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatSidenavContent,\n                        },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatSidenavContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }] });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatSidenav, isStandalone: true, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [CdkScrollable], template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n    constructor() {\n        super(...arguments);\n        this._allDrawers = undefined;\n        // We need an initializer here to avoid a TS error.\n        this._content = undefined;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatSidenavContainer, isStandalone: true, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n            {\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer,\n            },\n        ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"component\", type: MatSidenavContent, selector: \"mat-sidenav-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], standalone: true, imports: [MatSidenavContent], template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\nclass MatSidenavModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule,\n            CdkScrollableModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent], exports: [CdkScrollableModule,\n            MatCommonModule,\n            MatDrawer,\n            MatDrawerContainer,\n            MatDrawerContent,\n            MatSidenav,\n            MatSidenavContainer,\n            MatSidenavContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavModule, imports: [MatCommonModule,\n            CdkScrollableModule, CdkScrollableModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkScrollableModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}