{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-skeleton-loader/fesm2022/ngx-skeleton-loader.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Component, ChangeDetectionStrategy, Inject, Optional, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\"];\nconst _c1 = (a0, a1, a2, a3, a4) => ({\n  \"custom-content\": a0,\n  circle: a1,\n  progress: a2,\n  \"progress-dark\": a3,\n  pulse: a4\n});\nfunction NgxSkeletonLoaderComponent_For_1_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction NgxSkeletonLoaderComponent_For_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, NgxSkeletonLoaderComponent_For_1_Conditional_1_Template, 1, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction5(5, _c1, ctx_r0.appearance === \"custom-content\", ctx_r0.appearance === \"circle\", ctx_r0.animation === \"progress\", ctx_r0.animation === \"progress-dark\", ctx_r0.animation === \"pulse\"))(\"ngStyle\", ctx_r0.theme);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel)(\"aria-valuetext\", ctx_r0.loadingText);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.appearance === \"custom-content\" ? 1 : -1);\n  }\n}\nconst NGX_SKELETON_LOADER_CONFIG = new InjectionToken('ngx-skeleton-loader.config');\nclass NgxSkeletonLoaderComponent {\n  constructor(config) {\n    this.config = config;\n    const {\n      appearance = 'line',\n      animation = 'progress',\n      theme = null,\n      loadingText = 'Loading...',\n      count = 1,\n      ariaLabel = 'loading'\n    } = config || {};\n    this.appearance = appearance;\n    this.animation = animation;\n    this.theme = theme;\n    this.loadingText = loadingText;\n    this.count = count;\n    this.items = [];\n    this.ariaLabel = ariaLabel;\n  }\n  ngOnInit() {\n    this.validateInputValues();\n  }\n  validateInputValues() {\n    // Checking if it's receiving a numeric value (string having ONLY numbers or if it's a number)\n    if (!/^\\d+$/.test(`${this.count}`)) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'count' a numeric value. Forcing default to \"1\".`);\n      }\n      this.count = 1;\n    }\n    //Force count to 1 when custom-content is used\n    if (this.appearance === 'custom-content') {\n      // Shows error message only in Development\n      if (isDevMode() && this.count !== 1) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` enforces elements with \"custom-content\" appearance as DOM nodes. Forcing \"count\" to \"1\".`);\n        this.count = 1;\n      }\n    }\n    this.items.length = this.count;\n    const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n    if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n      }\n      this.animation = 'progress';\n    }\n    if (['circle', 'line', 'custom-content', ''].indexOf(String(this.appearance)) === -1) {\n      // Shows error message only in Development\n      if (isDevMode()) {\n        console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'appearance' as: circle or line or custom-content or empty string. Forcing default to \"''\".`);\n      }\n      this.appearance = '';\n    }\n    // This code is not using optional chaining since it's only supported on Angular CLI v12\n    //  - more details in this comment https://github.com/angular/angular-cli/issues/20471#issuecomment-815599616\n    // Which raises issues on the consumer's side. E.G: https://github.com/willmendesneto/ngx-skeleton-loader/issues/150#issuecomment-1638612329\n    const {\n      theme\n    } = this.config || {};\n    if (!!theme && !!theme.extendsFromRoot && this.theme !== null) {\n      // Shows error message only in Development\n      this.theme = {\n        ...this.config.theme,\n        ...this.theme\n      };\n    }\n  }\n  ngOnChanges(changes) {\n    // Avoiding multiple calls for the same input in case there's no changes in the fields\n    // Checking if the fields that require validation are available and if they were changed\n    // In case were not changed, we stop the function. Otherwise, `validateInputValues` will be called.\n    if (['count', 'animation', 'appearance'].find(key => changes[key] && (changes[key].isFirstChange() || changes[key].previousValue === changes[key].currentValue))) {\n      return;\n    }\n    this.validateInputValues();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function NgxSkeletonLoaderComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgxSkeletonLoaderComponent)(i0.ɵɵdirectiveInject(NGX_SKELETON_LOADER_CONFIG, 8));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgxSkeletonLoaderComponent,\n      selectors: [[\"ngx-skeleton-loader\"]],\n      inputs: {\n        count: \"count\",\n        loadingText: \"loadingText\",\n        appearance: \"appearance\",\n        animation: \"animation\",\n        ariaLabel: \"ariaLabel\",\n        theme: \"theme\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 2,\n      vars: 0,\n      consts: [[\"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"-1\", 1, \"skeleton-loader\", 3, \"ngClass\", \"ngStyle\"]],\n      template: function NgxSkeletonLoaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵrepeaterCreate(0, NgxSkeletonLoaderComponent_For_1_Template, 2, 11, \"div\", 0, i0.ɵɵrepeaterTrackByIdentity);\n        }\n        if (rf & 2) {\n          i0.ɵɵrepeater(ctx.items);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgStyle],\n      styles: [\".skeleton-loader[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;position:relative;background:#eff1f6 no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader[_ngcontent-%COMP%]:after, .skeleton-loader[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.circle[_ngcontent-%COMP%]{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%]{transform:translateZ(0)}.skeleton-loader.progress[_ngcontent-%COMP%]:after, .skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:after, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{box-sizing:border-box}.skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{animation:_ngcontent-%COMP%_progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,#fff0,#fff9,#fff0)}.skeleton-loader.progress-dark[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content[_ngcontent-%COMP%]{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse[_ngcontent-%COMP%], .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%], .skeleton-loader.progress[_ngcontent-%COMP%]:before{animation:none}.skeleton-loader.progress[_ngcontent-%COMP%]:before, .skeleton-loader.progress-dark[_ngcontent-%COMP%], .skeleton-loader.custom-content[_ngcontent-%COMP%]{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader[_ngcontent-%COMP%]{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes _ngcontent-%COMP%_progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes _ngcontent-%COMP%_pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-skeleton-loader',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"@for (item of items; track item) {\\n  <div\\n    class=\\\"skeleton-loader\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    aria-busy=\\\"true\\\"\\n    aria-valuemin=\\\"0\\\"\\n    aria-valuemax=\\\"100\\\"\\n    [attr.aria-valuetext]=\\\"loadingText\\\"\\n    role=\\\"progressbar\\\"\\n    tabindex=\\\"-1\\\"\\n    [ngClass]=\\\"{\\n      'custom-content': appearance === 'custom-content',\\n      circle: appearance === 'circle',\\n      progress: animation === 'progress',\\n      'progress-dark': animation === 'progress-dark',\\n      pulse: animation === 'pulse'\\n    }\\\"\\n    [ngStyle]=\\\"theme\\\"\\n    >\\n    @if (appearance  === 'custom-content') {\\n      <ng-content></ng-content>\\n    }\\n  </div>\\n}\\n\",\n      styles: [\".skeleton-loader{box-sizing:border-box;overflow:hidden;position:relative;background:#eff1f6 no-repeat;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.skeleton-loader:after,.skeleton-loader:before{box-sizing:border-box}.skeleton-loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.skeleton-loader.progress,.skeleton-loader.progress-dark{transform:translateZ(0)}.skeleton-loader.progress:after,.skeleton-loader.progress:before,.skeleton-loader.progress-dark:after,.skeleton-loader.progress-dark:before{box-sizing:border-box}.skeleton-loader.progress:before,.skeleton-loader.progress-dark:before{animation:progress 2s ease-in-out infinite;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.skeleton-loader.progress:before{background-image:linear-gradient(90deg,#fff0,#fff9,#fff0)}.skeleton-loader.progress-dark:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.skeleton-loader.pulse{animation:pulse 1.5s cubic-bezier(.4,0,.2,1) infinite;animation-delay:.5s}.skeleton-loader.custom-content{height:100%;background:none}@media (prefers-reduced-motion: reduce){.skeleton-loader.pulse,.skeleton-loader.progress-dark,.skeleton-loader.custom-content,.skeleton-loader.progress:before{animation:none}.skeleton-loader.progress:before,.skeleton-loader.progress-dark,.skeleton-loader.custom-content{background-image:none}}@media screen and (min-device-width: 1200px){.skeleton-loader{-webkit-user-select:none;user-select:none;cursor:wait}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}to{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes pulse{0%{opacity:1}50%{opacity:.4}to{opacity:1}}\\n\"]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [NGX_SKELETON_LOADER_CONFIG]\n    }, {\n      type: Optional\n    }]\n  }], {\n    count: [{\n      type: Input\n    }],\n    loadingText: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass NgxSkeletonLoaderModule {\n  static forRoot(config) {\n    return {\n      ngModule: NgxSkeletonLoaderModule,\n      providers: [{\n        provide: NGX_SKELETON_LOADER_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function NgxSkeletonLoaderModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgxSkeletonLoaderModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgxSkeletonLoaderModule,\n      declarations: [NgxSkeletonLoaderComponent],\n      imports: [CommonModule],\n      exports: [NgxSkeletonLoaderComponent]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSkeletonLoaderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxSkeletonLoaderComponent],\n      imports: [CommonModule],\n      exports: [NgxSkeletonLoaderComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-skeleton-loader\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_SKELETON_LOADER_CONFIG, NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule };\n"],
  "mappings": "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",
  "names": []
}
