{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, Inject, Input, Output, NgModule } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Subject, from, mergeMap, EMPTY, takeUntil } from 'rxjs';\nimport { tsParticles } from 'tsparticles-engine';\nclass NgParticlesComponent {\n  platformId;\n  options;\n  url;\n  id;\n  particlesInit;\n  particlesLoaded = new EventEmitter();\n  destroy$ = new Subject();\n  container;\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.id = 'tsparticles';\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const cb = container => {\n      this.container = container;\n      this.particlesLoaded.emit(container);\n    };\n    from(this.particlesInit ? this.particlesInit(tsParticles) : Promise.resolve()).pipe(mergeMap(() => {\n      if (this.url) {\n        return tsParticles.loadJSON(this.id, this.url);\n      } else if (this.options) {\n        return tsParticles.load(this.id, this.options);\n      } else {\n        console.error('You must specify options or url to load tsParticles');\n        return EMPTY;\n      }\n    }), takeUntil(this.destroy$)).subscribe(cb);\n  }\n  ngOnDestroy() {\n    this.container?.destroy();\n    this.destroy$.next();\n  }\n  static ɵfac = function NgParticlesComponent_Factory(t) {\n    return new (t || NgParticlesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgParticlesComponent,\n    selectors: [[\"ng-particles\"]],\n    inputs: {\n      options: \"options\",\n      url: \"url\",\n      id: \"id\",\n      particlesInit: \"particlesInit\"\n    },\n    outputs: {\n      particlesLoaded: \"particlesLoaded\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function NgParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgParticlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-particles',\n      template: '<div [id]=\"id\"></div>'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    particlesInit: [{\n      type: Input\n    }],\n    particlesLoaded: [{\n      type: Output\n    }]\n  });\n})();\nclass ParticlesComponent extends NgParticlesComponent {\n  platformId;\n  constructor(platformId) {\n    super(platformId);\n    this.platformId = platformId;\n  }\n  static ɵfac = function ParticlesComponent_Factory(t) {\n    return new (t || ParticlesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParticlesComponent,\n    selectors: [[\"Particles\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function ParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ParticlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'Particles',\n      template: '<div [id]=\"id\"></div>'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\nclass NgParticlesModule {\n  static ɵfac = function NgParticlesModule_Factory(t) {\n    return new (t || NgParticlesModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgParticlesModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgParticlesModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgParticlesComponent, ParticlesComponent],\n      exports: [NgParticlesComponent, ParticlesComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-particles\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgParticlesComponent, NgParticlesModule, ParticlesComponent };","map":{"version":3,"names":["i0","EventEmitter","PLATFORM_ID","Component","Inject","Input","Output","NgModule","isPlatformServer","Subject","from","mergeMap","EMPTY","takeUntil","tsParticles","NgParticlesComponent","platformId","options","url","id","particlesInit","particlesLoaded","destroy$","container","constructor","ngAfterViewInit","cb","emit","Promise","resolve","pipe","loadJSON","load","console","error","subscribe","ngOnDestroy","destroy","next","ɵfac","NgParticlesComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","decls","vars","consts","template","NgParticlesComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","undefined","decorators","ParticlesComponent","ParticlesComponent_Factory","features","ɵɵInheritDefinitionFeature","ParticlesComponent_Template","NgParticlesModule","NgParticlesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports"],"sources":["D:/WorkShop/Production/BackEnd/Source Code/Personal Projects/E-Commerce/.NET Api with Angular/E-Commerce-API/lieblings/node_modules/ng-particles/fesm2022/ng-particles.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, Inject, Input, Output, NgModule } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Subject, from, mergeMap, EMPTY, takeUntil } from 'rxjs';\nimport { tsParticles } from 'tsparticles-engine';\n\nclass NgParticlesComponent {\n    platformId;\n    options;\n    url;\n    id;\n    particlesInit;\n    particlesLoaded = new EventEmitter();\n    destroy$ = new Subject();\n    container;\n    constructor(platformId) {\n        this.platformId = platformId;\n        this.id = 'tsparticles';\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        const cb = (container) => {\n            this.container = container;\n            this.particlesLoaded.emit(container);\n        };\n        from(this.particlesInit ? this.particlesInit(tsParticles) : Promise.resolve())\n            .pipe(mergeMap(() => {\n            if (this.url) {\n                return tsParticles.loadJSON(this.id, this.url);\n            }\n            else if (this.options) {\n                return tsParticles.load(this.id, this.options);\n            }\n            else {\n                console.error('You must specify options or url to load tsParticles');\n                return EMPTY;\n            }\n        }), takeUntil(this.destroy$))\n            .subscribe(cb);\n    }\n    ngOnDestroy() {\n        this.container?.destroy();\n        this.destroy$.next();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.8\", ngImport: i0, type: NgParticlesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.8\", type: NgParticlesComponent, selector: \"ng-particles\", inputs: { options: \"options\", url: \"url\", id: \"id\", particlesInit: \"particlesInit\" }, outputs: { particlesLoaded: \"particlesLoaded\" }, ngImport: i0, template: '<div [id]=\"id\"></div>', isInline: true });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.8\", ngImport: i0, type: NgParticlesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ng-particles',\n                    template: '<div [id]=\"id\"></div>',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { options: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], particlesInit: [{\n                type: Input\n            }], particlesLoaded: [{\n                type: Output\n            }] } });\nclass ParticlesComponent extends NgParticlesComponent {\n    platformId;\n    constructor(platformId) {\n        super(platformId);\n        this.platformId = platformId;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.8\", ngImport: i0, type: ParticlesComponent, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.8\", type: ParticlesComponent, selector: \"Particles\", usesInheritance: true, ngImport: i0, template: '<div [id]=\"id\"></div>', isInline: true });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.8\", ngImport: i0, type: ParticlesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'Particles',\n                    template: '<div [id]=\"id\"></div>',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass NgParticlesModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.8\", ngImport: i0, type: NgParticlesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.8\", ngImport: i0, type: NgParticlesModule, declarations: [NgParticlesComponent, ParticlesComponent], exports: [NgParticlesComponent, ParticlesComponent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.8\", ngImport: i0, type: NgParticlesModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.8\", ngImport: i0, type: NgParticlesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgParticlesComponent, ParticlesComponent],\n                    exports: [NgParticlesComponent, ParticlesComponent],\n                }]\n        }] });\n\n/*\n * Public API Surface of ng-particles\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgParticlesComponent, NgParticlesModule, ParticlesComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}