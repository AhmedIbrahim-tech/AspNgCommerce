{
  "version": 3,
  "sources": ["../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/Utils.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Canvas.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Random.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js", "../../../../../node_modules/tsparticles-engine/esm/Options/Classes/Options.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Particle.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Point.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Range.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Particles.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Retina.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Container.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js", "../../../../../node_modules/tsparticles-engine/esm/Core/Engine.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js", "../../../../../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js", "../../../../../node_modules/tsparticles-engine/esm/init.js", "../../../../../node_modules/tsparticles-engine/esm/index.js", "../../../../../node_modules/ng-particles/fesm2022/ng-particles.mjs"],
  "sourcesContent": ["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";", "import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n  constructor(xOrCoords, y, z) {\n    this._updateFromAngle = (angle, length) => {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    };\n    if (!isNumber(xOrCoords) && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n      const coords3d = xOrCoords;\n      this.z = coords3d.z ? coords3d.z : 0;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n      this.z = z ?? 0;\n    } else {\n      throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n    }\n  }\n  static get origin() {\n    return Vector3d.create(0, 0, 0);\n  }\n  get angle() {\n    return Math.atan2(this.y, this.x);\n  }\n  set angle(angle) {\n    this._updateFromAngle(angle, this.length);\n  }\n  get length() {\n    return Math.sqrt(this.getLengthSq());\n  }\n  set length(length) {\n    this._updateFromAngle(this.angle, length);\n  }\n  static clone(source) {\n    return Vector3d.create(source.x, source.y, source.z);\n  }\n  static create(x, y, z) {\n    return new Vector3d(x, y, z);\n  }\n  add(v) {\n    return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n  addTo(v) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n  }\n  copy() {\n    return Vector3d.clone(this);\n  }\n  distanceTo(v) {\n    return this.sub(v).length;\n  }\n  distanceToSq(v) {\n    return this.sub(v).getLengthSq();\n  }\n  div(n) {\n    return Vector3d.create(this.x / n, this.y / n, this.z / n);\n  }\n  divTo(n) {\n    this.x /= n;\n    this.y /= n;\n    this.z /= n;\n  }\n  getLengthSq() {\n    return this.x ** 2 + this.y ** 2;\n  }\n  mult(n) {\n    return Vector3d.create(this.x * n, this.y * n, this.z * n);\n  }\n  multTo(n) {\n    this.x *= n;\n    this.y *= n;\n    this.z *= n;\n  }\n  normalize() {\n    const length = this.length;\n    if (length != 0) {\n      this.multTo(1.0 / length);\n    }\n  }\n  rotate(angle) {\n    return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n  }\n  setTo(c) {\n    this.x = c.x;\n    this.y = c.y;\n    const v3d = c;\n    this.z = v3d.z ? v3d.z : 0;\n  }\n  sub(v) {\n    return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n  subFrom(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n  }\n}", "import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n  constructor(xOrCoords, y) {\n    super(xOrCoords, y, 0);\n  }\n  static get origin() {\n    return Vector.create(0, 0);\n  }\n  static clone(source) {\n    return Vector.create(source.x, source.y);\n  }\n  static create(x, y) {\n    return new Vector(x, y);\n  }\n}", "import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n  if (easings.get(name)) {\n    return;\n  }\n  easings.set(name, easing);\n}\nexport function getEasing(name) {\n  return easings.get(name) || (value => value);\n}\nexport function setRandom(rnd = Math.random) {\n  _random = rnd;\n}\nexport function getRandom() {\n  return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n  return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n  const max = getRangeMax(r);\n  let min = getRangeMin(r);\n  if (max === min) {\n    min = 0;\n  }\n  return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n  return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n  return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n  return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n  if (source === value || value === undefined && isNumber(source)) {\n    return source;\n  }\n  const min = getRangeMin(source),\n    max = getRangeMax(source);\n  return value !== undefined ? {\n    min: Math.min(min, value),\n    max: Math.max(max, value)\n  } : setRangeValue(min, max);\n}\nexport function getValue(options) {\n  const random = options.random,\n    {\n      enable,\n      minimumValue\n    } = isBoolean(random) ? {\n      enable: random,\n      minimumValue: 0\n    } : random;\n  return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n  const dx = pointA.x - pointB.x,\n    dy = pointA.y - pointB.y;\n  return {\n    dx: dx,\n    dy: dy,\n    distance: Math.sqrt(dx ** 2 + dy ** 2)\n  };\n}\nexport function getDistance(pointA, pointB) {\n  return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n  if (isNumber(direction)) {\n    return direction * Math.PI / 180;\n  }\n  switch (direction) {\n    case \"top\":\n      return -Math.PI / 2;\n    case \"top-right\":\n      return -Math.PI / 4;\n    case \"right\":\n      return 0;\n    case \"bottom-right\":\n      return Math.PI / 4;\n    case \"bottom\":\n      return Math.PI / 2;\n    case \"bottom-left\":\n      return 3 * Math.PI / 4;\n    case \"left\":\n      return Math.PI;\n    case \"top-left\":\n      return -3 * Math.PI / 4;\n    case \"inside\":\n      return Math.atan2(center.y - position.y, center.x - position.x);\n    case \"outside\":\n      return Math.atan2(position.y - center.y, position.x - center.x);\n    default:\n      return getRandom() * Math.PI * 2;\n  }\n}\nexport function getParticleBaseVelocity(direction) {\n  const baseVelocity = Vector.origin;\n  baseVelocity.length = 1;\n  baseVelocity.angle = direction;\n  return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n  return Vector.create(v1.x * (m1 - m2) / (m1 + m2) + v2.x * 2 * m2 / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n  return data.position && data.position.x !== undefined && data.position.y !== undefined ? {\n    x: data.position.x * data.size.width / 100,\n    y: data.position.y * data.size.height / 100\n  } : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n  return {\n    x: (data.position?.x ?? getRandom() * 100) * data.size.width / 100,\n    y: (data.position?.y ?? getRandom() * 100) * data.size.height / 100\n  };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n  const position = {\n    x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n    y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined\n  };\n  return calcPositionOrRandomFromSize({\n    size: data.size,\n    position\n  });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n  return {\n    x: data.position?.x ?? getRandom() * data.size.width,\n    y: data.position?.y ?? getRandom() * data.size.height\n  };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n  const position = {\n    x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n    y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined\n  };\n  return calcExactPositionOrRandomFromSize({\n    size: data.size,\n    position\n  });\n}\nexport function parseAlpha(input) {\n  return input ? input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input) : 1;\n}", "import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n  debug: console.debug,\n  error: console.error,\n  info: console.info,\n  log: console.log,\n  verbose: console.log,\n  warning: console.warn\n};\nexport function setLogger(logger) {\n  _logger.debug = logger.debug || _logger.debug;\n  _logger.error = logger.error || _logger.error;\n  _logger.info = logger.info || _logger.info;\n  _logger.log = logger.log || _logger.log;\n  _logger.verbose = logger.verbose || _logger.verbose;\n  _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n  return _logger;\n}\nfunction rectSideBounce(data) {\n  const res = {\n      bounced: false\n    },\n    {\n      pSide,\n      pOtherSide,\n      rectSide,\n      rectOtherSide,\n      velocity,\n      factor\n    } = data;\n  if (pOtherSide.min < rectOtherSide.min || pOtherSide.min > rectOtherSide.max || pOtherSide.max < rectOtherSide.min || pOtherSide.max > rectOtherSide.max) {\n    return res;\n  }\n  if (pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0 || pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0) {\n    res.velocity = velocity * -factor;\n    res.bounced = true;\n  }\n  return res;\n}\nfunction checkSelector(element, selectors) {\n  const res = executeOnSingleOrMultiple(selectors, selector => {\n    return element.matches(selector);\n  });\n  return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n  return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n  return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n  if (!hasMatchMedia()) {\n    return;\n  }\n  return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n  if (isSsr() || typeof MutationObserver === \"undefined\") {\n    return;\n  }\n  return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n  return value === array || isArray(array) && array.indexOf(value) > -1;\n}\nexport async function loadFont(font, weight) {\n  try {\n    await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n  } catch {}\n}\nexport function arrayRandomIndex(array) {\n  return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n  return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n  return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n  let inside = true;\n  if (!direction || direction === \"bottom\") {\n    inside = bounds.top < size.height + offset.x;\n  }\n  if (inside && (!direction || direction === \"left\")) {\n    inside = bounds.right > offset.x;\n  }\n  if (inside && (!direction || direction === \"right\")) {\n    inside = bounds.left < size.width + offset.y;\n  }\n  if (inside && (!direction || direction === \"top\")) {\n    inside = bounds.bottom > offset.y;\n  }\n  return inside;\n}\nexport function calculateBounds(point, radius) {\n  return {\n    bottom: point.y + radius,\n    left: point.x - radius,\n    right: point.x + radius,\n    top: point.y - radius\n  };\n}\nexport function deepExtend(destination, ...sources) {\n  for (const source of sources) {\n    if (source === undefined || source === null) {\n      continue;\n    }\n    if (!isObject(source)) {\n      destination = source;\n      continue;\n    }\n    const sourceIsArray = Array.isArray(source);\n    if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n      destination = [];\n    } else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n      destination = {};\n    }\n    for (const key in source) {\n      if (key === \"__proto__\") {\n        continue;\n      }\n      const sourceDict = source,\n        value = sourceDict[key],\n        destDict = destination;\n      destDict[key] = isObject(value) && Array.isArray(value) ? value.map(v => deepExtend(destDict[key], v)) : deepExtend(destDict[key], value);\n    }\n  }\n  return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n  return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n  executeOnSingleOrMultiple(divs, div => {\n    const divMode = div.mode,\n      divEnabled = div.enable;\n    if (divEnabled && isInArray(mode, divMode)) {\n      singleDivModeExecute(div, callback);\n    }\n  });\n}\nexport function singleDivModeExecute(div, callback) {\n  const selectors = div.selectors;\n  executeOnSingleOrMultiple(selectors, selector => {\n    callback(selector, div);\n  });\n}\nexport function divMode(divs, element) {\n  if (!element || !divs) {\n    return;\n  }\n  return findItemFromSingleOrMultiple(divs, div => {\n    return checkSelector(element, div.selectors);\n  });\n}\nexport function circleBounceDataFromParticle(p) {\n  return {\n    position: p.getPosition(),\n    radius: p.getRadius(),\n    mass: p.getMass(),\n    velocity: p.velocity,\n    factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical))\n  };\n}\nexport function circleBounce(p1, p2) {\n  const {\n      x: xVelocityDiff,\n      y: yVelocityDiff\n    } = p1.velocity.sub(p2.velocity),\n    [pos1, pos2] = [p1.position, p2.position],\n    {\n      dx: xDist,\n      dy: yDist\n    } = getDistances(pos2, pos1);\n  if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n    return;\n  }\n  const angle = -Math.atan2(yDist, xDist),\n    m1 = p1.mass,\n    m2 = p2.mass,\n    u1 = p1.velocity.rotate(angle),\n    u2 = p2.velocity.rotate(angle),\n    v1 = collisionVelocity(u1, u2, m1, m2),\n    v2 = collisionVelocity(u2, u1, m1, m2),\n    vFinal1 = v1.rotate(-angle),\n    vFinal2 = v2.rotate(-angle);\n  p1.velocity.x = vFinal1.x * p1.factor.x;\n  p1.velocity.y = vFinal1.y * p1.factor.y;\n  p2.velocity.x = vFinal2.x * p2.factor.x;\n  p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n  const pPos = particle.getPosition(),\n    size = particle.getRadius(),\n    bounds = calculateBounds(pPos, size),\n    resH = rectSideBounce({\n      pSide: {\n        min: bounds.left,\n        max: bounds.right\n      },\n      pOtherSide: {\n        min: bounds.top,\n        max: bounds.bottom\n      },\n      rectSide: {\n        min: divBounds.left,\n        max: divBounds.right\n      },\n      rectOtherSide: {\n        min: divBounds.top,\n        max: divBounds.bottom\n      },\n      velocity: particle.velocity.x,\n      factor: getValue(particle.options.bounce.horizontal)\n    });\n  if (resH.bounced) {\n    if (resH.velocity !== undefined) {\n      particle.velocity.x = resH.velocity;\n    }\n    if (resH.position !== undefined) {\n      particle.position.x = resH.position;\n    }\n  }\n  const resV = rectSideBounce({\n    pSide: {\n      min: bounds.top,\n      max: bounds.bottom\n    },\n    pOtherSide: {\n      min: bounds.left,\n      max: bounds.right\n    },\n    rectSide: {\n      min: divBounds.top,\n      max: divBounds.bottom\n    },\n    rectOtherSide: {\n      min: divBounds.left,\n      max: divBounds.right\n    },\n    velocity: particle.velocity.y,\n    factor: getValue(particle.options.bounce.vertical)\n  });\n  if (resV.bounced) {\n    if (resV.velocity !== undefined) {\n      particle.velocity.y = resV.velocity;\n    }\n    if (resV.position !== undefined) {\n      particle.position.y = resV.position;\n    }\n  }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n  return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n  return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n  return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n  const valueRange = options.value,\n    animationOptions = options.animation,\n    res = {\n      delayTime: getRangeValue(animationOptions.delay) * 1000,\n      enable: animationOptions.enable,\n      value: getRangeValue(options.value) * pxRatio,\n      max: getRangeMax(valueRange) * pxRatio,\n      min: getRangeMin(valueRange) * pxRatio,\n      loops: 0,\n      maxLoops: getRangeValue(animationOptions.count),\n      time: 0\n    };\n  if (animationOptions.enable) {\n    res.decay = 1 - getRangeValue(animationOptions.decay);\n    switch (animationOptions.mode) {\n      case \"increase\":\n        res.status = \"increasing\";\n        break;\n      case \"decrease\":\n        res.status = \"decreasing\";\n        break;\n      case \"random\":\n        res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n        break;\n    }\n    const autoStatus = animationOptions.mode === \"auto\";\n    switch (animationOptions.startValue) {\n      case \"min\":\n        res.value = res.min;\n        if (autoStatus) {\n          res.status = \"increasing\";\n        }\n        break;\n      case \"max\":\n        res.value = res.max;\n        if (autoStatus) {\n          res.status = \"decreasing\";\n        }\n        break;\n      case \"random\":\n      default:\n        res.value = randomInRange(res);\n        if (autoStatus) {\n          res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n        }\n        break;\n    }\n  }\n  res.initialValue = res.value;\n  return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n  const isPercent = positionOrSize.mode === \"percent\";\n  if (!isPercent) {\n    const {\n      mode: _,\n      ...rest\n    } = positionOrSize;\n    return rest;\n  }\n  const isPosition = \"x\" in positionOrSize;\n  if (isPosition) {\n    return {\n      x: positionOrSize.x / 100 * canvasSize.width,\n      y: positionOrSize.y / 100 * canvasSize.height\n    };\n  } else {\n    return {\n      width: positionOrSize.width / 100 * canvasSize.width,\n      height: positionOrSize.height / 100 * canvasSize.height\n    };\n  }\n}\nexport function getPosition(position, canvasSize) {\n  return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n  return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n  return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n  return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n  return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n  return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n  return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n  return Array.isArray(arg);\n}", "import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\",\n  midColorValue = \"mid\",\n  colorManagers = new Map();\nexport function addColorManager(manager) {\n  colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\nfunction stringToRgba(input) {\n  for (const [, manager] of colorManagers) {\n    if (input.startsWith(manager.stringPrefix)) {\n      return manager.parseString(input);\n    }\n  }\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i,\n    hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n      return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }),\n    regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i,\n    result = regex.exec(hexFixed);\n  return result ? {\n    a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n    b: parseInt(result[3], 16),\n    g: parseInt(result[2], 16),\n    r: parseInt(result[1], 16)\n  } : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return colorToRgb(color.value, index, useIndex);\n  }\n  if (isArray(color.value)) {\n    return rangeColorToRgb({\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const [, manager] of colorManagers) {\n    const res = manager.handleRangeColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n  if (!input) {\n    return;\n  }\n  const color = isString(input) ? {\n    value: input\n  } : input;\n  if (isString(color.value)) {\n    return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n  }\n  if (isArray(color.value)) {\n    return colorToRgb({\n      value: itemFromArray(color.value, index, useIndex)\n    });\n  }\n  for (const [, manager] of colorManagers) {\n    const res = manager.handleColor(color);\n    if (res) {\n      return res;\n    }\n  }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n  const rgb = colorToRgb(color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n  const rgb = rangeColorToRgb(color, index, useIndex);\n  return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n  const r1 = color.r / 255,\n    g1 = color.g / 255,\n    b1 = color.b / 255,\n    max = Math.max(r1, g1, b1),\n    min = Math.min(r1, g1, b1),\n    res = {\n      h: 0,\n      l: (max + min) / 2,\n      s: 0\n    };\n  if (max !== min) {\n    res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n    res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n  }\n  res.l *= 100;\n  res.s *= 100;\n  res.h *= 60;\n  if (res.h < 0) {\n    res.h += 360;\n  }\n  if (res.h >= 360) {\n    res.h -= 360;\n  }\n  return res;\n}\nexport function stringToAlpha(input) {\n  return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n  return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n  const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    },\n    hslPercent = {\n      h: hsl.h / 360,\n      l: hsl.l / 100,\n      s: hsl.s / 100\n    };\n  if (!hslPercent.s) {\n    result.r = result.g = result.b = hslPercent.l;\n  } else {\n    const q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s,\n      p = 2 * hslPercent.l - q;\n    result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n    result.g = hue2rgb(p, q, hslPercent.h);\n    result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n  }\n  result.r = Math.floor(result.r * 255);\n  result.g = Math.floor(result.g * 255);\n  result.b = Math.floor(result.b * 255);\n  return result;\n}\nexport function hslaToRgba(hsla) {\n  const rgbResult = hslToRgb(hsla);\n  return {\n    a: hsla.a,\n    b: rgbResult.b,\n    g: rgbResult.g,\n    r: rgbResult.r\n  };\n}\nexport function getRandomRgbColor(min) {\n  const fixedMin = min ?? 0;\n  return {\n    b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    r: Math.floor(randomInRange(setRangeValue(fixedMin, 256)))\n  };\n}\nexport function getStyleFromRgb(color, opacity) {\n  return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n  return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n  let rgb1 = color1,\n    rgb2 = color2;\n  if (rgb1.r === undefined) {\n    rgb1 = hslToRgb(color1);\n  }\n  if (rgb2.r === undefined) {\n    rgb2 = hslToRgb(color2);\n  }\n  return {\n    b: mix(rgb1.b, rgb2.b, size1, size2),\n    g: mix(rgb1.g, rgb2.g, size1, size2),\n    r: mix(rgb1.r, rgb2.r, size1, size2)\n  };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n  if (linkColor === randomColorValue) {\n    return getRandomRgbColor();\n  } else if (linkColor === midColorValue) {\n    const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(),\n      destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n    if (sourceColor && destColor && p2) {\n      return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n    } else {\n      const hslColor = sourceColor ?? destColor;\n      if (hslColor) {\n        return hslToRgb(hslColor);\n      }\n    }\n  } else {\n    return linkColor;\n  }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n  const color = isString(optColor) ? optColor : optColor.value;\n  if (color === randomColorValue) {\n    if (consent) {\n      return rangeColorToRgb({\n        value: color\n      });\n    }\n    if (blink) {\n      return randomColorValue;\n    }\n    return midColorValue;\n  } else if (color === midColorValue) {\n    return midColorValue;\n  } else {\n    return rangeColorToRgb({\n      value: color\n    });\n  }\n}\nexport function getHslFromAnimation(animation) {\n  return animation !== undefined ? {\n    h: animation.h.value,\n    s: animation.s.value,\n    l: animation.l.value\n  } : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n  const resColor = {\n    h: {\n      enable: false,\n      value: hsl.h\n    },\n    s: {\n      enable: false,\n      value: hsl.s\n    },\n    l: {\n      enable: false,\n      value: hsl.l\n    }\n  };\n  if (animationOptions) {\n    setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n    setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n    setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n  }\n  return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n  colorValue.enable = colorAnimation.enable;\n  if (colorValue.enable) {\n    colorValue.velocity = getRangeValue(colorAnimation.speed) / 100 * reduceFactor;\n    colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n    colorValue.status = \"increasing\";\n    colorValue.loops = 0;\n    colorValue.maxLoops = getRangeValue(colorAnimation.count);\n    colorValue.time = 0;\n    colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n    if (!colorAnimation.sync) {\n      colorValue.velocity *= getRandom();\n      colorValue.value *= getRandom();\n    }\n    colorValue.initialValue = colorValue.value;\n  } else {\n    colorValue.velocity = 0;\n  }\n}", "import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n  context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n  if (!image) {\n    return;\n  }\n  context.globalAlpha = opacity;\n  context.drawImage(image, 0, 0, dimension.width, dimension.height);\n  context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n  const {\n    container,\n    context,\n    particle,\n    delta,\n    colorStyles,\n    backgroundMask,\n    composite,\n    radius,\n    opacity,\n    shadow,\n    transform\n  } = data;\n  const pos = particle.getPosition(),\n    angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0),\n    rotateData = {\n      sin: Math.sin(angle),\n      cos: Math.cos(angle)\n    },\n    transformData = {\n      a: rotateData.cos * (transform.a ?? 1),\n      b: rotateData.sin * (transform.b ?? 1),\n      c: -rotateData.sin * (transform.c ?? 1),\n      d: rotateData.cos * (transform.d ?? 1)\n    };\n  context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n  context.beginPath();\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n  const shadowColor = particle.shadowColor;\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n  if (colorStyles.fill) {\n    context.fillStyle = colorStyles.fill;\n  }\n  const strokeWidth = particle.strokeWidth ?? 0;\n  context.lineWidth = strokeWidth;\n  if (colorStyles.stroke) {\n    context.strokeStyle = colorStyles.stroke;\n  }\n  drawShape(container, context, particle, radius, opacity, delta);\n  if (strokeWidth > 0) {\n    context.stroke();\n  }\n  if (particle.close) {\n    context.closePath();\n  }\n  if (particle.fill) {\n    context.fill();\n  }\n  drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n  context.globalCompositeOperation = \"source-over\";\n  context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.drawers.get(particle.shape);\n  if (!drawer) {\n    return;\n  }\n  drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.drawers.get(particle.shape);\n  if (!drawer || !drawer.afterEffect) {\n    return;\n  }\n  drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n  plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n  if (!plugin.drawParticle) {\n    return;\n  }\n  plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n  return {\n    h: color.h,\n    s: color.s,\n    l: color.l + (type === \"darken\" ? -1 : 1) * value\n  };\n}", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n  const newValue = newFactor[key];\n  if (newValue !== undefined) {\n    factor[key] = (factor[key] ?? 1) * newValue;\n  }\n}\nexport class Canvas {\n  constructor(container) {\n    this.container = container;\n    this._applyPostDrawUpdaters = particle => {\n      for (const updater of this._postDrawUpdaters) {\n        updater.afterDraw && updater.afterDraw(particle);\n      }\n    };\n    this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n      for (const updater of this._preDrawUpdaters) {\n        if (updater.getColorStyles) {\n          const {\n            fill,\n            stroke\n          } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n          if (fill) {\n            colorStyles.fill = fill;\n          }\n          if (stroke) {\n            colorStyles.stroke = stroke;\n          }\n        }\n        if (updater.getTransformValues) {\n          const updaterTransform = updater.getTransformValues(particle);\n          for (const key in updaterTransform) {\n            setTransformValue(transform, updaterTransform, key);\n          }\n        }\n        updater.beforeDraw && updater.beforeDraw(particle);\n      }\n    };\n    this._applyResizePlugins = () => {\n      for (const plugin of this._resizePlugins) {\n        plugin.resize && plugin.resize();\n      }\n    };\n    this._getPluginParticleColors = particle => {\n      let fColor, sColor;\n      for (const plugin of this._colorPlugins) {\n        if (!fColor && plugin.particleFillColor) {\n          fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n        }\n        if (!sColor && plugin.particleStrokeColor) {\n          sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n        }\n        if (fColor && sColor) {\n          break;\n        }\n      }\n      return [fColor, sColor];\n    };\n    this._initCover = () => {\n      const options = this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = rangeColorToRgb(color);\n      if (coverRgb) {\n        const coverColor = {\n          ...coverRgb,\n          a: cover.opacity\n        };\n        this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    };\n    this._initStyle = () => {\n      const element = this.element,\n        options = this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      if (this._fullScreen) {\n        this._originalStyle = deepExtend({}, element.style);\n        this._setFullScreenStyle();\n      } else {\n        this._resetOriginalStyle();\n      }\n      for (const key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        const value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    };\n    this._initTrail = async () => {\n      const options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        trailFill = trail.fill;\n      if (!trail.enable) {\n        return;\n      }\n      if (trailFill.color) {\n        const fillColor = rangeColorToRgb(trailFill.color);\n        if (!fillColor) {\n          return;\n        }\n        const trail = options.particles.move.trail;\n        this._trailFill = {\n          color: {\n            ...fillColor\n          },\n          opacity: 1 / trail.length\n        };\n      } else {\n        await new Promise((resolve, reject) => {\n          if (!trailFill.image) {\n            return;\n          }\n          const img = document.createElement(\"img\");\n          img.addEventListener(\"load\", () => {\n            this._trailFill = {\n              image: img,\n              opacity: 1 / trail.length\n            };\n            resolve();\n          });\n          img.addEventListener(\"error\", evt => {\n            reject(evt.error);\n          });\n          img.src = trailFill.image;\n        });\n      }\n    };\n    this._paintBase = baseColor => {\n      this.draw(ctx => paintBase(ctx, this.size, baseColor));\n    };\n    this._paintImage = (image, opacity) => {\n      this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n    };\n    this._repairStyle = () => {\n      const element = this.element;\n      if (!element) {\n        return;\n      }\n      this._safeMutationObserver(observer => observer.disconnect());\n      this._initStyle();\n      this.initBackground();\n      this._safeMutationObserver(observer => observer.observe(element, {\n        attributes: true\n      }));\n    };\n    this._resetOriginalStyle = () => {\n      const element = this.element,\n        originalStyle = this._originalStyle;\n      if (!(element && originalStyle)) {\n        return;\n      }\n      const style = element.style;\n      style.position = originalStyle.position;\n      style.zIndex = originalStyle.zIndex;\n      style.top = originalStyle.top;\n      style.left = originalStyle.left;\n      style.width = originalStyle.width;\n      style.height = originalStyle.height;\n    };\n    this._safeMutationObserver = callback => {\n      if (!this._mutationObserver) {\n        return;\n      }\n      callback(this._mutationObserver);\n    };\n    this._setFullScreenStyle = () => {\n      const element = this.element;\n      if (!element) {\n        return;\n      }\n      const priority = \"important\",\n        style = element.style;\n      style.setProperty(\"position\", \"fixed\", priority);\n      style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n      style.setProperty(\"top\", \"0\", priority);\n      style.setProperty(\"left\", \"0\", priority);\n      style.setProperty(\"width\", \"100%\", priority);\n      style.setProperty(\"height\", \"100%\", priority);\n    };\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n  get _fullScreen() {\n    return this.container.actualOptions.fullScreen.enable;\n  }\n  clear() {\n    const options = this.container.actualOptions,\n      trail = options.particles.move.trail,\n      trailFill = this._trailFill;\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && trailFill) {\n      if (trailFill.color) {\n        this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n      } else if (trailFill.image) {\n        this._paintImage(trailFill.image, trailFill.opacity);\n      }\n    } else {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n  destroy() {\n    this.stop();\n    if (this._generated) {\n      const element = this.element;\n      element && element.remove();\n    } else {\n      this._resetOriginalStyle();\n    }\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n  draw(cb) {\n    const ctx = this._context;\n    if (!ctx) {\n      return;\n    }\n    return cb(ctx);\n  }\n  drawParticle(particle, delta) {\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n    const radius = particle.getRadius();\n    if (radius <= 0) {\n      return;\n    }\n    const pfColor = particle.getFillColor(),\n      psColor = particle.getStrokeColor() ?? pfColor;\n    let [fColor, sColor] = this._getPluginParticleColors(particle);\n    if (!fColor) {\n      fColor = pfColor;\n    }\n    if (!sColor) {\n      sColor = psColor;\n    }\n    if (!fColor && !sColor) {\n      return;\n    }\n    this.draw(ctx => {\n      const container = this.container,\n        options = container.actualOptions,\n        zIndexOptions = particle.options.zIndex,\n        zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n        opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1,\n        strokeOpacity = particle.strokeOpacity ?? opacity,\n        zOpacity = opacity * zOpacityFactor,\n        zStrokeOpacity = strokeOpacity * zOpacityFactor,\n        transform = {},\n        colorStyles = {\n          fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n        };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n      this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n      drawParticle({\n        container,\n        context: ctx,\n        particle,\n        delta,\n        colorStyles,\n        backgroundMask: options.backgroundMask.enable,\n        composite: options.backgroundMask.composite,\n        radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n        opacity: zOpacity,\n        shadow: particle.options.shadow,\n        transform\n      });\n      this._applyPostDrawUpdaters(particle);\n    });\n  }\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n  }\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => drawPlugin(ctx, plugin, delta));\n  }\n  async init() {\n    this._safeMutationObserver(obs => obs.disconnect());\n    this._mutationObserver = safeMutationObserver(records => {\n      for (const record of records) {\n        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n          this._repairStyle();\n        }\n      }\n    });\n    this.resize();\n    this._initStyle();\n    this._initCover();\n    try {\n      await this._initTrail();\n    } catch (e) {\n      getLogger().error(e);\n    }\n    this.initBackground();\n    this._safeMutationObserver(obs => {\n      if (!this.element) {\n        return;\n      }\n      obs.observe(this.element, {\n        attributes: true\n      });\n    });\n    this.initUpdaters();\n    this.initPlugins();\n    this.paint();\n  }\n  initBackground() {\n    const options = this.container.actualOptions,\n      background = options.background,\n      element = this.element;\n    if (!element) {\n      return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n      return;\n    }\n    if (background.color) {\n      const color = rangeColorToRgb(background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n  initPlugins() {\n    this._resizePlugins = [];\n    for (const [, plugin] of this.container.plugins) {\n      if (plugin.resize) {\n        this._resizePlugins.push(plugin);\n      }\n      if (plugin.particleFillColor || plugin.particleStrokeColor) {\n        this._colorPlugins.push(plugin);\n      }\n    }\n  }\n  initUpdaters() {\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    for (const updater of this.container.particles.updaters) {\n      if (updater.afterDraw) {\n        this._postDrawUpdaters.push(updater);\n      }\n      if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n        this._preDrawUpdaters.push(updater);\n      }\n    }\n  }\n  loadCanvas(canvas) {\n    if (this._generated && this.element) {\n      this.element.remove();\n    }\n    this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n    this.element = canvas;\n    this.element.ariaHidden = \"true\";\n    this._originalStyle = deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this._context = this.element.getContext(\"2d\");\n    this._safeMutationObserver(obs => {\n      if (!this.element) {\n        return;\n      }\n      obs.observe(this.element, {\n        attributes: true\n      });\n    });\n    this.container.retina.init();\n    this.initBackground();\n  }\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        clear(ctx, this.size);\n        this._paintBase(this._coverColorStyle);\n      } else {\n        this._paintBase();\n      }\n    });\n  }\n  resize() {\n    if (!this.element) {\n      return false;\n    }\n    const container = this.container,\n      pxRatio = container.retina.pixelRatio,\n      size = container.canvas.size,\n      newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n    if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n      return false;\n    }\n    const oldSize = {\n      ...size\n    };\n    this.element.width = size.width = this.element.offsetWidth * pxRatio;\n    this.element.height = size.height = this.element.offsetHeight * pxRatio;\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n    return true;\n  }\n  stop() {\n    this._safeMutationObserver(obs => obs.disconnect());\n    this._mutationObserver = undefined;\n    this.draw(ctx => clear(ctx, this.size));\n  }\n  async windowResize() {\n    if (!this.element || !this.resize()) {\n      return;\n    }\n    const container = this.container,\n      needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n    this._applyResizePlugins();\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n}", "import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    let addOptions = {\n      passive: true\n    };\n    if (isBoolean(options)) {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    const removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\nexport class EventListeners {\n  constructor(container) {\n    this.container = container;\n    this._doMouseTouchClick = e => {\n      const container = this.container,\n        options = container.actualOptions;\n      if (this._canPush) {\n        const mouseInteractivity = container.interactivity.mouse,\n          mousePos = mouseInteractivity.position;\n        if (!mousePos) {\n          return;\n        }\n        mouseInteractivity.clickPosition = {\n          ...mousePos\n        };\n        mouseInteractivity.clickTime = new Date().getTime();\n        const onClick = options.interactivity.events.onClick;\n        executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n      }\n      if (e.type === \"touchend\") {\n        setTimeout(() => this._mouseTouchFinish(), 500);\n      }\n    };\n    this._handleThemeChange = e => {\n      const mediaEvent = e,\n        container = this.container,\n        options = container.options,\n        defaultThemes = options.defaultThemes,\n        themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light,\n        theme = options.themes.find(theme => theme.name === themeName);\n      if (theme && theme.default.auto) {\n        container.loadTheme(themeName);\n      }\n    };\n    this._handleVisibilityChange = () => {\n      const container = this.container,\n        options = container.actualOptions;\n      this._mouseTouchFinish();\n      if (!options.pauseOnBlur) {\n        return;\n      }\n      if (document && document.hidden) {\n        container.pageHidden = true;\n        container.pause();\n      } else {\n        container.pageHidden = false;\n        if (container.getAnimationStatus()) {\n          container.play(true);\n        } else {\n          container.draw(true);\n        }\n      }\n    };\n    this._handleWindowResize = async () => {\n      if (this._resizeTimeout) {\n        clearTimeout(this._resizeTimeout);\n        delete this._resizeTimeout;\n      }\n      this._resizeTimeout = setTimeout(async () => {\n        const canvas = this.container.canvas;\n        canvas && (await canvas.windowResize());\n      }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    };\n    this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions;\n      const interactivityEl = container.interactivity.element;\n      if (!interactivityEl) {\n        return;\n      }\n      const html = interactivityEl,\n        canvasEl = container.canvas.element;\n      if (canvasEl) {\n        canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n      }\n      if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n        return;\n      }\n      manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n      manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n      manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n      if (!options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n      } else {\n        manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n        manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n        manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n      }\n      manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n      manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n    };\n    this._manageListeners = add => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions,\n        detectType = options.interactivity.detectsOn,\n        canvasEl = container.canvas.element;\n      let mouseLeaveTmpEvent = mouseLeaveEvent;\n      if (detectType === \"window\") {\n        container.interactivity.element = window;\n        mouseLeaveTmpEvent = mouseOutEvent;\n      } else if (detectType === \"parent\" && canvasEl) {\n        container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n      } else {\n        container.interactivity.element = canvasEl;\n      }\n      this._manageMediaMatch(add);\n      this._manageResize(add);\n      this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n      if (document) {\n        manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n      }\n    };\n    this._manageMediaMatch = add => {\n      const handlers = this._handlers,\n        mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n      if (!mediaMatch) {\n        return;\n      }\n      if (mediaMatch.addEventListener !== undefined) {\n        manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n        return;\n      }\n      if (mediaMatch.addListener === undefined) {\n        return;\n      }\n      if (add) {\n        mediaMatch.addListener(handlers.oldThemeChange);\n      } else {\n        mediaMatch.removeListener(handlers.oldThemeChange);\n      }\n    };\n    this._manageResize = add => {\n      const handlers = this._handlers,\n        container = this.container,\n        options = container.actualOptions;\n      if (!options.interactivity.events.resize) {\n        return;\n      }\n      if (typeof ResizeObserver === \"undefined\") {\n        manageListener(window, resizeEvent, handlers.resize, add);\n        return;\n      }\n      const canvasEl = container.canvas.element;\n      if (this._resizeObserver && !add) {\n        if (canvasEl) {\n          this._resizeObserver.unobserve(canvasEl);\n        }\n        this._resizeObserver.disconnect();\n        delete this._resizeObserver;\n      } else if (!this._resizeObserver && add && canvasEl) {\n        this._resizeObserver = new ResizeObserver(async entries => {\n          const entry = entries.find(e => e.target === canvasEl);\n          if (!entry) {\n            return;\n          }\n          await this._handleWindowResize();\n        });\n        this._resizeObserver.observe(canvasEl);\n      }\n    };\n    this._mouseDown = () => {\n      const {\n        interactivity\n      } = this.container;\n      if (!interactivity) {\n        return;\n      }\n      const {\n        mouse\n      } = interactivity;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    };\n    this._mouseTouchClick = e => {\n      const container = this.container,\n        options = container.actualOptions,\n        {\n          mouse\n        } = container.interactivity;\n      mouse.inside = true;\n      let handled = false;\n      const mousePosition = mouse.position;\n      if (!mousePosition || !options.interactivity.events.onClick.enable) {\n        return;\n      }\n      for (const [, plugin] of container.plugins) {\n        if (!plugin.clickPositionValid) {\n          continue;\n        }\n        handled = plugin.clickPositionValid(mousePosition);\n        if (handled) {\n          break;\n        }\n      }\n      if (!handled) {\n        this._doMouseTouchClick(e);\n      }\n      mouse.clicking = false;\n    };\n    this._mouseTouchFinish = () => {\n      const interactivity = this.container.interactivity;\n      if (!interactivity) {\n        return;\n      }\n      const mouse = interactivity.mouse;\n      delete mouse.position;\n      delete mouse.clickPosition;\n      delete mouse.downPosition;\n      interactivity.status = mouseLeaveEvent;\n      mouse.inside = false;\n      mouse.clicking = false;\n    };\n    this._mouseTouchMove = e => {\n      const container = this.container,\n        options = container.actualOptions,\n        interactivity = container.interactivity,\n        canvasEl = container.canvas.element;\n      if (!interactivity || !interactivity.element) {\n        return;\n      }\n      interactivity.mouse.inside = true;\n      let pos;\n      if (e.type.startsWith(\"pointer\")) {\n        this._canPush = true;\n        const mouseEvent = e;\n        if (interactivity.element === window) {\n          if (canvasEl) {\n            const clientRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.clientX - clientRect.left,\n              y: mouseEvent.clientY - clientRect.top\n            };\n          }\n        } else if (options.interactivity.detectsOn === \"parent\") {\n          const source = mouseEvent.target,\n            target = mouseEvent.currentTarget;\n          if (source && target && canvasEl) {\n            const sourceRect = source.getBoundingClientRect(),\n              targetRect = target.getBoundingClientRect(),\n              canvasRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n              y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n            };\n          } else {\n            pos = {\n              x: mouseEvent.offsetX ?? mouseEvent.clientX,\n              y: mouseEvent.offsetY ?? mouseEvent.clientY\n            };\n          }\n        } else if (mouseEvent.target === canvasEl) {\n          pos = {\n            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n            y: mouseEvent.offsetY ?? mouseEvent.clientY\n          };\n        }\n      } else {\n        this._canPush = e.type !== \"touchmove\";\n        if (canvasEl) {\n          const touchEvent = e,\n            lastTouch = touchEvent.touches[touchEvent.touches.length - 1],\n            canvasRect = canvasEl.getBoundingClientRect();\n          pos = {\n            x: lastTouch.clientX - (canvasRect.left ?? 0),\n            y: lastTouch.clientY - (canvasRect.top ?? 0)\n          };\n        }\n      }\n      const pxRatio = container.retina.pixelRatio;\n      if (pos) {\n        pos.x *= pxRatio;\n        pos.y *= pxRatio;\n      }\n      interactivity.mouse.position = pos;\n      interactivity.status = mouseMoveEvent;\n    };\n    this._touchEnd = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.delete(touch.identifier);\n      }\n      this._mouseTouchFinish();\n    };\n    this._touchEndClick = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.delete(touch.identifier);\n      }\n      this._mouseTouchClick(e);\n    };\n    this._touchStart = e => {\n      const evt = e,\n        touches = Array.from(evt.changedTouches);\n      for (const touch of touches) {\n        this._touches.set(touch.identifier, performance.now());\n      }\n      this._mouseTouchMove(e);\n    };\n    this._canPush = true;\n    this._touches = new Map();\n    this._handlers = {\n      mouseDown: () => this._mouseDown(),\n      mouseLeave: () => this._mouseTouchFinish(),\n      mouseMove: e => this._mouseTouchMove(e),\n      mouseUp: e => this._mouseTouchClick(e),\n      touchStart: e => this._touchStart(e),\n      touchMove: e => this._mouseTouchMove(e),\n      touchEnd: e => this._touchEnd(e),\n      touchCancel: e => this._touchEnd(e),\n      touchEndClick: e => this._touchEndClick(e),\n      visibilityChange: () => this._handleVisibilityChange(),\n      themeChange: e => this._handleThemeChange(e),\n      oldThemeChange: e => this._handleThemeChange(e),\n      resize: () => {\n        this._handleWindowResize();\n      }\n    };\n  }\n  addListeners() {\n    this._manageListeners(true);\n  }\n  removeListeners() {\n    this._manageListeners(false);\n  }\n}", "import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n  constructor() {\n    this.value = \"\";\n  }\n  static create(source, data) {\n    const color = new OptionsColor();\n    color.load(source);\n    if (data !== undefined) {\n      if (isString(data) || isArray(data)) {\n        color.load({\n          value: data\n        });\n      } else {\n        color.load(data);\n      }\n    }\n    return color;\n  }\n  load(data) {\n    if (data?.value === undefined) {\n      return;\n    }\n    this.value = data.value;\n  }\n}", "import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n  constructor() {\n    this.color = new OptionsColor();\n    this.color.value = \"\";\n    this.image = \"\";\n    this.position = \"\";\n    this.repeat = \"\";\n    this.size = \"\";\n    this.opacity = 1;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.image !== undefined) {\n      this.image = data.image;\n    }\n    if (data.position !== undefined) {\n      this.position = data.position;\n    }\n    if (data.repeat !== undefined) {\n      this.repeat = data.repeat;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n  }\n}", "import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n  constructor() {\n    this.color = new OptionsColor();\n    this.color.value = \"#fff\";\n    this.opacity = 1;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = data.opacity;\n    }\n  }\n}", "import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n  constructor() {\n    this.composite = \"destination-out\";\n    this.cover = new BackgroundMaskCover();\n    this.enable = false;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.composite !== undefined) {\n      this.composite = data.composite;\n    }\n    if (data.cover !== undefined) {\n      const cover = data.cover;\n      const color = isString(data.cover) ? {\n        color: data.cover\n      } : data.cover;\n      this.cover.load(cover.color !== undefined ? cover : {\n        color: color\n      });\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n  }\n}", "export class FullScreen {\n  constructor() {\n    this.enable = true;\n    this.zIndex = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.zIndex !== undefined) {\n      this.zIndex = data.zIndex;\n    }\n  }\n}", "export class ClickEvent {\n  constructor() {\n    this.enable = false;\n    this.mode = [];\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n  }\n}", "import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n  constructor() {\n    this.selectors = [];\n    this.enable = false;\n    this.mode = [];\n    this.type = \"circle\";\n  }\n  get el() {\n    return this.elementId;\n  }\n  set el(value) {\n    this.elementId = value;\n  }\n  get elementId() {\n    return this.ids;\n  }\n  set elementId(value) {\n    this.ids = value;\n  }\n  get ids() {\n    return executeOnSingleOrMultiple(this.selectors, t => t.replace(\"#\", \"\"));\n  }\n  set ids(value) {\n    this.selectors = executeOnSingleOrMultiple(value, t => `#${t}`);\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    const ids = data.ids ?? data.elementId ?? data.el;\n    if (ids !== undefined) {\n      this.ids = ids;\n    }\n    if (data.selectors !== undefined) {\n      this.selectors = data.selectors;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n}", "export class Parallax {\n  constructor() {\n    this.enable = false;\n    this.force = 2;\n    this.smooth = 10;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.force !== undefined) {\n      this.force = data.force;\n    }\n    if (data.smooth !== undefined) {\n      this.smooth = data.smooth;\n    }\n  }\n}", "import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n  constructor() {\n    this.enable = false;\n    this.mode = [];\n    this.parallax = new Parallax();\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    this.parallax.load(data.parallax);\n  }\n}", "export class ResizeEvent {\n  constructor() {\n    this.delay = 0.5;\n    this.enable = true;\n  }\n  load(data) {\n    if (data === undefined) {\n      return;\n    }\n    if (data.delay !== undefined) {\n      this.delay = data.delay;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n  }\n}", "import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n  constructor() {\n    this.onClick = new ClickEvent();\n    this.onDiv = new DivEvent();\n    this.onHover = new HoverEvent();\n    this.resize = new ResizeEvent();\n  }\n  get onclick() {\n    return this.onClick;\n  }\n  set onclick(value) {\n    this.onClick = value;\n  }\n  get ondiv() {\n    return this.onDiv;\n  }\n  set ondiv(value) {\n    this.onDiv = value;\n  }\n  get onhover() {\n    return this.onHover;\n  }\n  set onhover(value) {\n    this.onHover = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.onClick.load(data.onClick ?? data.onclick);\n    const onDiv = data.onDiv ?? data.ondiv;\n    if (onDiv !== undefined) {\n      this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n        const tmp = new DivEvent();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n    this.onHover.load(data.onHover ?? data.onhover);\n    if (isBoolean(data.resize)) {\n      this.resize.enable = data.resize;\n    } else {\n      this.resize.load(data.resize);\n    }\n  }\n}", "export class Modes {\n  constructor(engine, container) {\n    this._engine = engine;\n    this._container = container;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (!this._container) {\n      return;\n    }\n    const interactors = this._engine.plugins.interactors.get(this._container);\n    if (!interactors) {\n      return;\n    }\n    for (const interactor of interactors) {\n      if (!interactor.loadModeOptions) {\n        continue;\n      }\n      interactor.loadModeOptions(this, data);\n    }\n  }\n}", "import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n  constructor(engine, container) {\n    this.detectsOn = \"window\";\n    this.events = new Events();\n    this.modes = new Modes(engine, container);\n  }\n  get detect_on() {\n    return this.detectsOn;\n  }\n  set detect_on(value) {\n    this.detectsOn = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    const detectsOn = data.detectsOn ?? data.detect_on;\n    if (detectsOn !== undefined) {\n      this.detectsOn = detectsOn;\n    }\n    this.events.load(data.events);\n    this.modes.load(data.modes);\n  }\n}", "import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.position) {\n      this.position = {\n        x: data.position.x ?? 50,\n        y: data.position.y ?? 50,\n        mode: data.position.mode ?? \"percent\"\n      };\n    }\n    if (data.options) {\n      this.options = deepExtend({}, data.options);\n    }\n  }\n}", "import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n  constructor() {\n    this.maxWidth = Infinity;\n    this.options = {};\n    this.mode = \"canvas\";\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.maxWidth !== undefined) {\n      this.maxWidth = data.maxWidth;\n    }\n    if (data.mode !== undefined) {\n      if (data.mode === \"screen\") {\n        this.mode = \"screen\";\n      } else {\n        this.mode = \"canvas\";\n      }\n    }\n    if (data.options !== undefined) {\n      this.options = deepExtend({}, data.options);\n    }\n  }\n}", "export class ThemeDefault {\n  constructor() {\n    this.auto = false;\n    this.mode = \"any\";\n    this.value = false;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.auto !== undefined) {\n      this.auto = data.auto;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.value !== undefined) {\n      this.value = data.value;\n    }\n  }\n}", "import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n  constructor() {\n    this.name = \"\";\n    this.default = new ThemeDefault();\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.name !== undefined) {\n      this.name = data.name;\n    }\n    this.default.load(data.default);\n    if (data.options !== undefined) {\n      this.options = deepExtend({}, data.options);\n    }\n  }\n}", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n  constructor() {\n    this.count = 0;\n    this.enable = false;\n    this.offset = 0;\n    this.speed = 1;\n    this.delay = 0;\n    this.decay = 0;\n    this.sync = true;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.count !== undefined) {\n      this.count = setRangeValue(data.count);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.offset !== undefined) {\n      this.offset = setRangeValue(data.offset);\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n    if (data.delay !== undefined) {\n      this.delay = setRangeValue(data.delay);\n    }\n    if (data.sync !== undefined) {\n      this.sync = data.sync;\n    }\n  }\n}", "import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n  constructor() {\n    this.h = new ColorAnimation();\n    this.s = new ColorAnimation();\n    this.l = new ColorAnimation();\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.h.load(data.h);\n    this.s.load(data.s);\n    this.l.load(data.l);\n  }\n}", "import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n  constructor() {\n    super();\n    this.animation = new HslAnimation();\n  }\n  static create(source, data) {\n    const color = new AnimatableColor();\n    color.load(source);\n    if (data !== undefined) {\n      if (isString(data) || isArray(data)) {\n        color.load({\n          value: data\n        });\n      } else {\n        color.load(data);\n      }\n    }\n    return color;\n  }\n  load(data) {\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    const colorAnimation = data.animation;\n    if (colorAnimation !== undefined) {\n      if (colorAnimation.enable !== undefined) {\n        this.animation.h.load(colorAnimation);\n      } else {\n        this.animation.load(data.animation);\n      }\n    }\n  }\n}", "export class CollisionsAbsorb {\n  constructor() {\n    this.speed = 2;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.speed !== undefined) {\n      this.speed = data.speed;\n    }\n  }\n}", "export class CollisionsOverlap {\n  constructor() {\n    this.enable = true;\n    this.retries = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.retries !== undefined) {\n      this.retries = data.retries;\n    }\n  }\n}", "import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n  constructor() {\n    this.count = 0;\n    this.enable = false;\n    this.speed = 1;\n    this.decay = 0;\n    this.delay = 0;\n    this.sync = false;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.count !== undefined) {\n      this.count = setRangeValue(data.count);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n    if (data.delay !== undefined) {\n      this.delay = setRangeValue(data.delay);\n    }\n    if (data.sync !== undefined) {\n      this.sync = data.sync;\n    }\n  }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n  constructor() {\n    super();\n    this.mode = \"auto\";\n    this.startValue = \"random\";\n  }\n  load(data) {\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    if (data.minimumValue !== undefined) {\n      this.minimumValue = data.minimumValue;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.startValue !== undefined) {\n      this.startValue = data.startValue;\n    }\n  }\n}", "export class Random {\n  constructor() {\n    this.enable = false;\n    this.minimumValue = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.minimumValue !== undefined) {\n      this.minimumValue = data.minimumValue;\n    }\n  }\n}", "import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n  constructor() {\n    this.random = new Random();\n    this.value = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (isBoolean(data.random)) {\n      this.random.enable = data.random;\n    } else {\n      this.random.load(data.random);\n    }\n    if (data.value !== undefined) {\n      this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n    }\n  }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new AnimationOptions();\n  }\n  get anim() {\n    return this.animation;\n  }\n  set anim(value) {\n    this.animation = value;\n  }\n  load(data) {\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    const animation = data.animation ?? data.anim;\n    if (animation !== undefined) {\n      this.animation.load(animation);\n    }\n  }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new RangedAnimationOptions();\n  }\n  load(data) {\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    const animation = data.animation ?? data.anim;\n    if (animation !== undefined) {\n      this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n    }\n  }\n}", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n  constructor() {\n    super();\n    this.random.minimumValue = 0.1;\n    this.value = 1;\n  }\n}", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n  constructor() {\n    this.horizontal = new ParticlesBounceFactor();\n    this.vertical = new ParticlesBounceFactor();\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.horizontal.load(data.horizontal);\n    this.vertical.load(data.vertical);\n  }\n}", "import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n  constructor() {\n    this.absorb = new CollisionsAbsorb();\n    this.bounce = new ParticlesBounce();\n    this.enable = false;\n    this.maxSpeed = 50;\n    this.mode = \"bounce\";\n    this.overlap = new CollisionsOverlap();\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.absorb.load(data.absorb);\n    this.bounce.load(data.bounce);\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.maxSpeed !== undefined) {\n      this.maxSpeed = setRangeValue(data.maxSpeed);\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    this.overlap.load(data.overlap);\n  }\n}", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n  constructor() {\n    this.offset = 0;\n    this.value = 90;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.offset !== undefined) {\n      this.offset = setRangeValue(data.offset);\n    }\n    if (data.value !== undefined) {\n      this.value = setRangeValue(data.value);\n    }\n  }\n}", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n  constructor() {\n    this.distance = 200;\n    this.enable = false;\n    this.rotate = {\n      x: 3000,\n      y: 3000\n    };\n  }\n  get rotateX() {\n    return this.rotate.x;\n  }\n  set rotateX(value) {\n    this.rotate.x = value;\n  }\n  get rotateY() {\n    return this.rotate.y;\n  }\n  set rotateY(value) {\n    this.rotate.y = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.distance !== undefined) {\n      this.distance = setRangeValue(data.distance);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    const rotateX = data.rotate?.x ?? data.rotateX;\n    if (rotateX !== undefined) {\n      this.rotate.x = rotateX;\n    }\n    const rotateY = data.rotate?.y ?? data.rotateY;\n    if (rotateY !== undefined) {\n      this.rotate.y = rotateY;\n    }\n  }\n}", "export class MoveCenter {\n  constructor() {\n    this.x = 50;\n    this.y = 50;\n    this.mode = \"percent\";\n    this.radius = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.x !== undefined) {\n      this.x = data.x;\n    }\n    if (data.y !== undefined) {\n      this.y = data.y;\n    }\n    if (data.mode !== undefined) {\n      this.mode = data.mode;\n    }\n    if (data.radius !== undefined) {\n      this.radius = data.radius;\n    }\n  }\n}", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n  constructor() {\n    this.acceleration = 9.81;\n    this.enable = false;\n    this.inverse = false;\n    this.maxSpeed = 50;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.acceleration !== undefined) {\n      this.acceleration = setRangeValue(data.acceleration);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.inverse !== undefined) {\n      this.inverse = data.inverse;\n    }\n    if (data.maxSpeed !== undefined) {\n      this.maxSpeed = setRangeValue(data.maxSpeed);\n    }\n  }\n}", "import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n  constructor() {\n    this.clamp = true;\n    this.delay = new ValueWithRandom();\n    this.enable = false;\n    this.options = {};\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.clamp !== undefined) {\n      this.clamp = data.clamp;\n    }\n    this.delay.load(data.delay);\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.generator = data.generator;\n    if (data.options) {\n      this.options = deepExtend(this.options, data.options);\n    }\n  }\n}", "import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = OptionsColor.create(this.color, data.color);\n    }\n    if (data.image !== undefined) {\n      this.image = data.image;\n    }\n  }\n}", "import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n  constructor() {\n    this.enable = false;\n    this.length = 10;\n    this.fill = new MoveTrailFill();\n  }\n  get fillColor() {\n    return this.fill.color;\n  }\n  set fillColor(value) {\n    this.fill.load({\n      color: value\n    });\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.fill !== undefined || data.fillColor !== undefined) {\n      this.fill.load(data.fill || {\n        color: data.fillColor\n      });\n    }\n    if (data.length !== undefined) {\n      this.length = data.length;\n    }\n  }\n}", "export class OutModes {\n  constructor() {\n    this.default = \"out\";\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.default !== undefined) {\n      this.default = data.default;\n    }\n    this.bottom = data.bottom ?? data.default;\n    this.left = data.left ?? data.default;\n    this.right = data.right ?? data.default;\n    this.top = data.top ?? data.default;\n  }\n}", "import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n  constructor() {\n    this.acceleration = 0;\n    this.enable = false;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.acceleration !== undefined) {\n      this.acceleration = setRangeValue(data.acceleration);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.position) {\n      this.position = deepExtend({}, data.position);\n    }\n  }\n}", "import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n  constructor() {\n    this.angle = new MoveAngle();\n    this.attract = new MoveAttract();\n    this.center = new MoveCenter();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = \"none\";\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new MovePath();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new MoveTrail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n  get bounce() {\n    return this.collisions;\n  }\n  set bounce(value) {\n    this.collisions = value;\n  }\n  get collisions() {\n    return false;\n  }\n  set collisions(_) {}\n  get noise() {\n    return this.path;\n  }\n  set noise(value) {\n    this.path = value;\n  }\n  get outMode() {\n    return this.outModes.default;\n  }\n  set outMode(value) {\n    this.outModes.default = value;\n  }\n  get out_mode() {\n    return this.outMode;\n  }\n  set out_mode(value) {\n    this.outMode = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.angle.load(isNumber(data.angle) ? {\n      value: data.angle\n    } : data.angle);\n    this.attract.load(data.attract);\n    this.center.load(data.center);\n    if (data.decay !== undefined) {\n      this.decay = setRangeValue(data.decay);\n    }\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n    if (data.distance !== undefined) {\n      this.distance = isNumber(data.distance) ? {\n        horizontal: data.distance,\n        vertical: data.distance\n      } : {\n        ...data.distance\n      };\n    }\n    if (data.drift !== undefined) {\n      this.drift = setRangeValue(data.drift);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.gravity.load(data.gravity);\n    const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n    if (outModes !== undefined) {\n      if (isObject(outModes)) {\n        this.outModes.load(outModes);\n      } else {\n        this.outModes.load({\n          default: outModes\n        });\n      }\n    }\n    this.path.load(data.path ?? data.noise);\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    this.spin.load(data.spin);\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n    this.trail.load(data.trail);\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n}", "import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n  constructor() {\n    super();\n    this.destroy = \"none\";\n    this.speed = 2;\n  }\n  get opacity_min() {\n    return this.minimumValue;\n  }\n  set opacity_min(value) {\n    this.minimumValue = value;\n  }\n  load(data) {\n    if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n      data.minimumValue = data.opacity_min;\n    }\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    if (data.destroy !== undefined) {\n      this.destroy = data.destroy;\n    }\n  }\n}", "import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new OpacityAnimation();\n    this.random.minimumValue = 0.1;\n    this.value = 1;\n  }\n  get anim() {\n    return this.animation;\n  }\n  set anim(value) {\n    this.animation = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    super.load(data);\n    const animation = data.animation ?? data.anim;\n    if (animation !== undefined) {\n      this.animation.load(animation);\n      this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n    }\n  }\n}", "export class ParticlesDensity {\n  constructor() {\n    this.enable = false;\n    this.width = 1920;\n    this.height = 1080;\n  }\n  get area() {\n    return this.width;\n  }\n  set area(value) {\n    this.width = value;\n  }\n  get factor() {\n    return this.height;\n  }\n  set factor(value) {\n    this.height = value;\n  }\n  get value_area() {\n    return this.area;\n  }\n  set value_area(value) {\n    this.area = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    const width = data.width ?? data.area ?? data.value_area;\n    if (width !== undefined) {\n      this.width = width;\n    }\n    const height = data.height ?? data.factor;\n    if (height !== undefined) {\n      this.height = height;\n    }\n  }\n}", "import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n  constructor() {\n    this.density = new ParticlesDensity();\n    this.limit = 0;\n    this.value = 0;\n  }\n  get max() {\n    return this.limit;\n  }\n  set max(value) {\n    this.limit = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.density.load(data.density);\n    const limit = data.limit ?? data.max;\n    if (limit !== undefined) {\n      this.limit = limit;\n    }\n    if (data.value !== undefined) {\n      this.value = data.value;\n    }\n  }\n}", "import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n  constructor() {\n    this.blur = 0;\n    this.color = new OptionsColor();\n    this.enable = false;\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n    this.color.value = \"#000\";\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.blur !== undefined) {\n      this.blur = data.blur;\n    }\n    this.color = OptionsColor.create(this.color, data.color);\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.offset === undefined) {\n      return;\n    }\n    if (data.offset.x !== undefined) {\n      this.offset.x = data.offset.x;\n    }\n    if (data.offset.y !== undefined) {\n      this.offset.y = data.offset.y;\n    }\n  }\n}", "import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\",\n  charAltKey = \"char\",\n  imageKey = \"image\",\n  imageAltKey = \"images\",\n  polygonKey = \"polygon\",\n  polygonAltKey = \"star\";\nexport class Shape {\n  constructor() {\n    this.loadShape = (item, mainKey, altKey, altOverride) => {\n      if (!item) {\n        return;\n      }\n      const itemIsArray = isArray(item),\n        emptyValue = itemIsArray ? [] : {},\n        mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]),\n        altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n      if (mainDifferentValues) {\n        this.options[mainKey] = emptyValue;\n      }\n      if (altDifferentValues && altOverride) {\n        this.options[altKey] = emptyValue;\n      }\n      this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n      if (!this.options[altKey] || altOverride) {\n        this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n      }\n    };\n    this.close = true;\n    this.fill = true;\n    this.options = {};\n    this.type = \"circle\";\n  }\n  get character() {\n    return this.options[charKey] ?? this.options[charAltKey];\n  }\n  set character(value) {\n    this.options[charAltKey] = this.options[charKey] = value;\n  }\n  get custom() {\n    return this.options;\n  }\n  set custom(value) {\n    this.options = value;\n  }\n  get image() {\n    return this.options[imageKey] ?? this.options[imageAltKey];\n  }\n  set image(value) {\n    this.options[imageAltKey] = this.options[imageKey] = value;\n  }\n  get images() {\n    return this.image;\n  }\n  set images(value) {\n    this.image = value;\n  }\n  get polygon() {\n    return this.options[polygonKey] ?? this.options[polygonAltKey];\n  }\n  set polygon(value) {\n    this.options[polygonAltKey] = this.options[polygonKey] = value;\n  }\n  get stroke() {\n    return [];\n  }\n  set stroke(_value) {}\n  load(data) {\n    if (!data) {\n      return;\n    }\n    const options = data.options ?? data.custom;\n    if (options !== undefined) {\n      for (const shape in options) {\n        const item = options[shape];\n        if (item) {\n          this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n        }\n      }\n    }\n    this.loadShape(data.character, charKey, charAltKey, true);\n    this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n    this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n    if (data.close !== undefined) {\n      this.close = data.close;\n    }\n    if (data.fill !== undefined) {\n      this.fill = data.fill;\n    }\n    if (data.type !== undefined) {\n      this.type = data.type;\n    }\n  }\n}", "import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n  constructor() {\n    super();\n    this.destroy = \"none\";\n    this.speed = 5;\n  }\n  get size_min() {\n    return this.minimumValue;\n  }\n  set size_min(value) {\n    this.minimumValue = value;\n  }\n  load(data) {\n    if (data?.size_min !== undefined && data.minimumValue === undefined) {\n      data.minimumValue = data.size_min;\n    }\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    if (data.destroy !== undefined) {\n      this.destroy = data.destroy;\n    }\n  }\n}", "import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n  constructor() {\n    super();\n    this.animation = new SizeAnimation();\n    this.random.minimumValue = 1;\n    this.value = 3;\n  }\n  get anim() {\n    return this.animation;\n  }\n  set anim(value) {\n    this.animation = value;\n  }\n  load(data) {\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    const animation = data.animation ?? data.anim;\n    if (animation !== undefined) {\n      this.animation.load(animation);\n      this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n    }\n  }\n}", "import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n  constructor() {\n    this.width = 0;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = AnimatableColor.create(this.color, data.color);\n    }\n    if (data.width !== undefined) {\n      this.width = setRangeValue(data.width);\n    }\n    if (data.opacity !== undefined) {\n      this.opacity = setRangeValue(data.opacity);\n    }\n  }\n}", "import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n  constructor() {\n    super();\n    this.opacityRate = 1;\n    this.sizeRate = 1;\n    this.velocityRate = 1;\n  }\n  load(data) {\n    super.load(data);\n    if (!data) {\n      return;\n    }\n    if (data.opacityRate !== undefined) {\n      this.opacityRate = data.opacityRate;\n    }\n    if (data.sizeRate !== undefined) {\n      this.sizeRate = data.sizeRate;\n    }\n    if (data.velocityRate !== undefined) {\n      this.velocityRate = data.velocityRate;\n    }\n  }\n}", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n  constructor(engine, container) {\n    this._engine = engine;\n    this._container = container;\n    this.bounce = new ParticlesBounce();\n    this.collisions = new Collisions();\n    this.color = new AnimatableColor();\n    this.color.value = \"#fff\";\n    this.groups = {};\n    this.move = new Move();\n    this.number = new ParticlesNumber();\n    this.opacity = new Opacity();\n    this.reduceDuplicates = false;\n    this.shadow = new Shadow();\n    this.shape = new Shape();\n    this.size = new Size();\n    this.stroke = new Stroke();\n    this.zIndex = new ZIndex();\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    this.bounce.load(data.bounce);\n    this.color.load(AnimatableColor.create(this.color, data.color));\n    if (data.groups !== undefined) {\n      for (const group in data.groups) {\n        const item = data.groups[group];\n        if (item !== undefined) {\n          this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n        }\n      }\n    }\n    this.move.load(data.move);\n    this.number.load(data.number);\n    this.opacity.load(data.opacity);\n    if (data.reduceDuplicates !== undefined) {\n      this.reduceDuplicates = data.reduceDuplicates;\n    }\n    this.shape.load(data.shape);\n    this.size.load(data.size);\n    this.shadow.load(data.shadow);\n    this.zIndex.load(data.zIndex);\n    const collisions = data.move?.collisions ?? data.move?.bounce;\n    if (collisions !== undefined) {\n      this.collisions.enable = collisions;\n    }\n    this.collisions.load(data.collisions);\n    if (data.interactivity !== undefined) {\n      this.interactivity = deepExtend({}, data.interactivity);\n    }\n    const strokeToLoad = data.stroke ?? data.shape?.stroke;\n    if (strokeToLoad) {\n      this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n        const tmp = new Stroke();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n    if (this._container) {\n      const updaters = this._engine.plugins.updaters.get(this._container);\n      if (updaters) {\n        for (const updater of updaters) {\n          if (updater.loadOptions) {\n            updater.loadOptions(this, data);\n          }\n        }\n      }\n      const interactors = this._engine.plugins.interactors.get(this._container);\n      if (interactors) {\n        for (const interactor of interactors) {\n          if (interactor.loadParticlesOptions) {\n            interactor.loadParticlesOptions(this, data);\n          }\n        }\n      }\n    }\n  }\n}", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n  for (const sourceOptions of sourceOptionsArr) {\n    options.load(sourceOptions);\n  }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n  const options = new ParticlesOptions(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}", "import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n  constructor(engine, container) {\n    this._findDefaultTheme = mode => {\n      return this.themes.find(theme => theme.default.value && theme.default.mode === mode) ?? this.themes.find(theme => theme.default.value && theme.default.mode === \"any\");\n    };\n    this._importPreset = preset => {\n      this.load(this._engine.plugins.getPreset(preset));\n    };\n    this._engine = engine;\n    this._container = container;\n    this.autoPlay = true;\n    this.background = new Background();\n    this.backgroundMask = new BackgroundMask();\n    this.defaultThemes = {};\n    this.delay = 0;\n    this.fullScreen = new FullScreen();\n    this.detectRetina = true;\n    this.duration = 0;\n    this.fpsLimit = 120;\n    this.interactivity = new Interactivity(engine, container);\n    this.manualParticles = [];\n    this.particles = loadParticlesOptions(this._engine, this._container);\n    this.pauseOnBlur = true;\n    this.pauseOnOutsideViewport = true;\n    this.responsive = [];\n    this.smooth = false;\n    this.style = {};\n    this.themes = [];\n    this.zLayers = 100;\n  }\n  get backgroundMode() {\n    return this.fullScreen;\n  }\n  set backgroundMode(value) {\n    this.fullScreen.load(value);\n  }\n  get fps_limit() {\n    return this.fpsLimit;\n  }\n  set fps_limit(value) {\n    this.fpsLimit = value;\n  }\n  get retina_detect() {\n    return this.detectRetina;\n  }\n  set retina_detect(value) {\n    this.detectRetina = value;\n  }\n  load(data) {\n    if (!data) {\n      return;\n    }\n    if (data.preset !== undefined) {\n      executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n    }\n    if (data.autoPlay !== undefined) {\n      this.autoPlay = data.autoPlay;\n    }\n    if (data.delay !== undefined) {\n      this.delay = setRangeValue(data.delay);\n    }\n    const detectRetina = data.detectRetina ?? data.retina_detect;\n    if (detectRetina !== undefined) {\n      this.detectRetina = detectRetina;\n    }\n    if (data.duration !== undefined) {\n      this.duration = setRangeValue(data.duration);\n    }\n    const fpsLimit = data.fpsLimit ?? data.fps_limit;\n    if (fpsLimit !== undefined) {\n      this.fpsLimit = fpsLimit;\n    }\n    if (data.pauseOnBlur !== undefined) {\n      this.pauseOnBlur = data.pauseOnBlur;\n    }\n    if (data.pauseOnOutsideViewport !== undefined) {\n      this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n    }\n    if (data.zLayers !== undefined) {\n      this.zLayers = data.zLayers;\n    }\n    this.background.load(data.background);\n    const fullScreen = data.fullScreen ?? data.backgroundMode;\n    if (isBoolean(fullScreen)) {\n      this.fullScreen.enable = fullScreen;\n    } else {\n      this.fullScreen.load(fullScreen);\n    }\n    this.backgroundMask.load(data.backgroundMask);\n    this.interactivity.load(data.interactivity);\n    if (data.manualParticles) {\n      this.manualParticles = data.manualParticles.map(t => {\n        const tmp = new ManualParticle();\n        tmp.load(t);\n        return tmp;\n      });\n    }\n    this.particles.load(data.particles);\n    this.style = deepExtend(this.style, data.style);\n    this._engine.plugins.loadOptions(this, data);\n    if (data.smooth !== undefined) {\n      this.smooth = data.smooth;\n    }\n    const interactors = this._engine.plugins.interactors.get(this._container);\n    if (interactors) {\n      for (const interactor of interactors) {\n        if (interactor.loadOptions) {\n          interactor.loadOptions(this, data);\n        }\n      }\n    }\n    if (data.responsive !== undefined) {\n      for (const responsive of data.responsive) {\n        const optResponsive = new Responsive();\n        optResponsive.load(responsive);\n        this.responsive.push(optResponsive);\n      }\n    }\n    this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n    if (data.themes !== undefined) {\n      for (const theme of data.themes) {\n        const existingTheme = this.themes.find(t => t.name === theme.name);\n        if (!existingTheme) {\n          const optTheme = new Theme();\n          optTheme.load(theme);\n          this.themes.push(optTheme);\n        } else {\n          existingTheme.load(theme);\n        }\n      }\n    }\n    this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n    this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n  }\n  setResponsive(width, pxRatio, defaultOptions) {\n    this.load(defaultOptions);\n    const responsiveOptions = this.responsive.find(t => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n    this.load(responsiveOptions?.options);\n    return responsiveOptions?.maxWidth;\n  }\n  setTheme(name) {\n    if (name) {\n      const chosenTheme = this.themes.find(theme => theme.name === name);\n      if (chosenTheme) {\n        this.load(chosenTheme.options);\n      }\n    } else {\n      const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"),\n        clientDarkMode = mediaMatch && mediaMatch.matches,\n        defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n      if (defaultTheme) {\n        this.load(defaultTheme.options);\n      }\n    }\n  }\n}", "export class InteractionManager {\n  constructor(engine, container) {\n    this.container = container;\n    this._engine = engine;\n    this._interactors = engine.plugins.getInteractors(this.container, true);\n    this._externalInteractors = [];\n    this._particleInteractors = [];\n  }\n  async externalInteract(delta) {\n    for (const interactor of this._externalInteractors) {\n      interactor.isEnabled() && (await interactor.interact(delta));\n    }\n  }\n  handleClickMode(mode) {\n    for (const interactor of this._externalInteractors) {\n      interactor.handleClickMode && interactor.handleClickMode(mode);\n    }\n  }\n  init() {\n    this._externalInteractors = [];\n    this._particleInteractors = [];\n    for (const interactor of this._interactors) {\n      switch (interactor.type) {\n        case \"external\":\n          this._externalInteractors.push(interactor);\n          break;\n        case \"particles\":\n          this._particleInteractors.push(interactor);\n          break;\n      }\n      interactor.init();\n    }\n  }\n  async particlesInteract(particle, delta) {\n    for (const interactor of this._externalInteractors) {\n      interactor.clear(particle, delta);\n    }\n    for (const interactor of this._particleInteractors) {\n      interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n    }\n  }\n  async reset(particle) {\n    for (const interactor of this._externalInteractors) {\n      interactor.isEnabled() && interactor.reset(particle);\n    }\n    for (const interactor of this._particleInteractors) {\n      interactor.isEnabled(particle) && interactor.reset(particle);\n    }\n  }\n}", "import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = data => {\n  if (!isInArray(data.outMode, data.checkModes)) {\n    return;\n  }\n  const diameter = data.radius * 2;\n  if (data.coord > data.maxCoord - diameter) {\n    data.setCb(-data.radius);\n  } else if (data.coord < diameter) {\n    data.setCb(data.radius);\n  }\n};\nexport class Particle {\n  constructor(engine, id, container, position, overrideOptions, group) {\n    this.container = container;\n    this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n      for (const [, plugin] of container.plugins) {\n        const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n        if (pluginPos) {\n          return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n        }\n      }\n      const canvasSize = container.canvas.size,\n        exactPosition = calcExactPositionOrRandomFromSize({\n          size: canvasSize,\n          position: position\n        }),\n        pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n        radius = this.getRadius(),\n        outModes = this.options.move.outModes,\n        fixHorizontal = outMode => {\n          fixOutMode({\n            outMode,\n            checkModes: [\"bounce\", \"bounce-horizontal\"],\n            coord: pos.x,\n            maxCoord: container.canvas.size.width,\n            setCb: value => pos.x += value,\n            radius\n          });\n        },\n        fixVertical = outMode => {\n          fixOutMode({\n            outMode,\n            checkModes: [\"bounce\", \"bounce-vertical\"],\n            coord: pos.y,\n            maxCoord: container.canvas.size.height,\n            setCb: value => pos.y += value,\n            radius\n          });\n        };\n      fixHorizontal(outModes.left ?? outModes.default);\n      fixHorizontal(outModes.right ?? outModes.default);\n      fixVertical(outModes.top ?? outModes.default);\n      fixVertical(outModes.bottom ?? outModes.default);\n      if (this._checkOverlap(pos, tryCount)) {\n        return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n      }\n      return pos;\n    };\n    this._calculateVelocity = () => {\n      const baseVelocity = getParticleBaseVelocity(this.direction),\n        res = baseVelocity.copy(),\n        moveOptions = this.options.move;\n      if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n        return res;\n      }\n      const rad = Math.PI / 180 * getRangeValue(moveOptions.angle.value),\n        radOffset = Math.PI / 180 * getRangeValue(moveOptions.angle.offset),\n        range = {\n          left: radOffset - rad / 2,\n          right: radOffset + rad / 2\n        };\n      if (!moveOptions.straight) {\n        res.angle += randomInRange(setRangeValue(range.left, range.right));\n      }\n      if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n        res.length *= getRandom();\n      }\n      return res;\n    };\n    this._checkOverlap = (pos, tryCount = 0) => {\n      const collisionsOptions = this.options.collisions,\n        radius = this.getRadius();\n      if (!collisionsOptions.enable) {\n        return false;\n      }\n      const overlapOptions = collisionsOptions.overlap;\n      if (overlapOptions.enable) {\n        return false;\n      }\n      const retries = overlapOptions.retries;\n      if (retries >= 0 && tryCount > retries) {\n        throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n      }\n      return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n    };\n    this._getRollColor = color => {\n      if (!color || !this.roll || !this.backColor && !this.roll.alter) {\n        return color;\n      }\n      const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1,\n        backSum = this.roll.horizontal ? Math.PI / 2 : 0,\n        rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n      if (!rolled) {\n        return color;\n      }\n      if (this.backColor) {\n        return this.backColor;\n      }\n      if (this.roll.alter) {\n        return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n      }\n      return color;\n    };\n    this._initPosition = position => {\n      const container = this.container,\n        zIndexValue = getRangeValue(this.options.zIndex.value);\n      this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n      this.initialPosition = this.position.copy();\n      const canvasSize = container.canvas.size;\n      this.moveCenter = {\n        ...getPosition(this.options.move.center, canvasSize),\n        radius: this.options.move.center.radius ?? 0,\n        mode: this.options.move.center.mode ?? \"percent\"\n      };\n      this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n      switch (this.options.move.direction) {\n        case \"inside\":\n          this.outType = \"inside\";\n          break;\n        case \"outside\":\n          this.outType = \"outside\";\n          break;\n      }\n      this.offset = Vector.origin;\n    };\n    this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n      const shapeData = shapeOptions.options[this.shape];\n      if (!shapeData) {\n        return;\n      }\n      return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill\n      }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n    };\n    this._engine = engine;\n    this.init(id, position, overrideOptions, group);\n  }\n  destroy(override) {\n    if (this.unbreakable || this.destroyed) {\n      return;\n    }\n    this.destroyed = true;\n    this.bubble.inRange = false;\n    this.slow.inRange = false;\n    const container = this.container,\n      pathGenerator = this.pathGenerator;\n    for (const [, plugin] of container.plugins) {\n      if (plugin.particleDestroyed) {\n        plugin.particleDestroyed(this, override);\n      }\n    }\n    for (const updater of container.particles.updaters) {\n      if (updater.particleDestroyed) {\n        updater.particleDestroyed(this, override);\n      }\n    }\n    if (pathGenerator) {\n      pathGenerator.reset(this);\n    }\n  }\n  draw(delta) {\n    const container = this.container;\n    for (const [, plugin] of container.plugins) {\n      container.canvas.drawParticlePlugin(plugin, this, delta);\n    }\n    container.canvas.drawParticle(this, delta);\n  }\n  getFillColor() {\n    return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n  }\n  getMass() {\n    return this.getRadius() ** 2 * Math.PI / 2;\n  }\n  getPosition() {\n    return {\n      x: this.position.x + this.offset.x,\n      y: this.position.y + this.offset.y,\n      z: this.position.z\n    };\n  }\n  getRadius() {\n    return this.bubble.radius ?? this.size.value;\n  }\n  getStrokeColor() {\n    return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n  }\n  init(id, position, overrideOptions, group) {\n    const container = this.container,\n      engine = this._engine;\n    this.id = id;\n    this.group = group;\n    this.fill = true;\n    this.pathRotation = false;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.rotation = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.outType = \"normal\";\n    this.ignoresResizeRatio = true;\n    const pxRatio = container.retina.pixelRatio,\n      mainOptions = container.actualOptions,\n      particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles),\n      shapeType = particlesOptions.shape.type,\n      {\n        reduceDuplicates\n      } = particlesOptions;\n    this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n    const shapeOptions = particlesOptions.shape;\n    if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n      const overrideShapeType = overrideOptions.shape.type,\n        shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n      if (shape) {\n        this.shape = shape;\n        shapeOptions.load(overrideOptions.shape);\n      }\n    }\n    this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n    particlesOptions.load(overrideOptions);\n    const shapeData = this.shapeData;\n    if (shapeData) {\n      particlesOptions.load(shapeData.particles);\n    }\n    const interactivity = new Interactivity(engine, container);\n    interactivity.load(container.actualOptions.interactivity);\n    interactivity.load(particlesOptions.interactivity);\n    this.interactivity = interactivity;\n    this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n    this.close = shapeData?.close ?? particlesOptions.shape.close;\n    this.options = particlesOptions;\n    const pathOptions = this.options.move.path;\n    this.pathDelay = getValue(pathOptions.delay) * 1000;\n    if (pathOptions.generator) {\n      this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n      if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n        this.pathGenerator.init(container);\n      }\n    }\n    container.retina.initParticle(this);\n    this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n    this.bubble = {\n      inRange: false\n    };\n    this.slow = {\n      inRange: false,\n      factor: 1\n    };\n    this._initPosition(position);\n    this.initialVelocity = this._calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n    const particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    let drawer = container.drawers.get(this.shape);\n    if (!drawer) {\n      drawer = this._engine.plugins.getShapeDrawer(this.shape);\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n    if (drawer && drawer.loadShape) {\n      drawer.loadShape(this);\n    }\n    const sideCountFunc = drawer?.getSidesCount;\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n    this.spawning = false;\n    this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n    for (const updater of container.particles.updaters) {\n      updater.init(this);\n    }\n    for (const mover of container.particles.movers) {\n      mover.init && mover.init(this);\n    }\n    if (drawer && drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n    for (const [, plugin] of container.plugins) {\n      plugin.particleCreated && plugin.particleCreated(this);\n    }\n  }\n  isInsideCanvas() {\n    const radius = this.getRadius(),\n      canvasSize = this.container.canvas.size,\n      position = this.position;\n    return position.x >= -radius && position.y >= -radius && position.y <= canvasSize.height + radius && position.x <= canvasSize.width + radius;\n  }\n  isVisible() {\n    return !this.destroyed && !this.spawning && this.isInsideCanvas();\n  }\n  reset() {\n    for (const updater of this.container.particles.updaters) {\n      updater.reset && updater.reset(this);\n    }\n  }\n}", "export class Point {\n  constructor(position, particle) {\n    this.position = position;\n    this.particle = particle;\n  }\n}", "export class Range {\n  constructor(x, y) {\n    this.position = {\n      x: x,\n      y: y\n    };\n  }\n}", "import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n  constructor(x, y, width, height) {\n    super(x, y);\n    this.size = {\n      height: height,\n      width: width\n    };\n  }\n  contains(point) {\n    const w = this.size.width,\n      h = this.size.height,\n      pos = this.position;\n    return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n  }\n  intersects(range) {\n    if (range instanceof Circle) {\n      range.intersects(this);\n    }\n    const w = this.size.width,\n      h = this.size.height,\n      pos1 = this.position,\n      pos2 = range.position,\n      size2 = range instanceof Rectangle ? range.size : {\n        width: 0,\n        height: 0\n      },\n      w2 = size2.width,\n      h2 = size2.height;\n    return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n  }\n}", "import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n  constructor(x, y, radius) {\n    super(x, y);\n    this.radius = radius;\n  }\n  contains(point) {\n    return getDistance(point, this.position) <= this.radius;\n  }\n  intersects(range) {\n    const pos1 = this.position,\n      pos2 = range.position,\n      distPos = {\n        x: Math.abs(pos2.x - pos1.x),\n        y: Math.abs(pos2.y - pos1.y)\n      },\n      r = this.radius;\n    if (range instanceof Circle) {\n      const rSum = r + range.radius,\n        dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n      return rSum > dist;\n    } else if (range instanceof Rectangle) {\n      const {\n          width,\n          height\n        } = range.size,\n        edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n      return edges <= r ** 2 || distPos.x <= r + width && distPos.y <= r + height || distPos.x <= width || distPos.y <= height;\n    }\n    return false;\n  }\n}", "import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n  constructor(rectangle, capacity) {\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this._subdivide = () => {\n      const {\n          x,\n          y\n        } = this.rectangle.position,\n        {\n          width,\n          height\n        } = this.rectangle.size,\n        {\n          capacity\n        } = this;\n      for (let i = 0; i < 4; i++) {\n        this._subs.push(new QuadTree(new Rectangle(x + width / 2 * (i % 2), y + height / 2 * (Math.round(i / 2) - i % 2), width / 2, height / 2), capacity));\n      }\n      this._divided = true;\n    };\n    this._points = [];\n    this._divided = false;\n    this._subs = [];\n  }\n  insert(point) {\n    if (!this.rectangle.contains(point.position)) {\n      return false;\n    }\n    if (this._points.length < this.capacity) {\n      this._points.push(point);\n      return true;\n    }\n    if (!this._divided) {\n      this._subdivide();\n    }\n    return this._subs.some(sub => sub.insert(point));\n  }\n  query(range, check, found) {\n    const res = found || [];\n    if (!range.intersects(this.rectangle)) {\n      return [];\n    }\n    for (const p of this._points) {\n      if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius() && (!check || check(p.particle))) {\n        continue;\n      }\n      res.push(p.particle);\n    }\n    if (this._divided) {\n      for (const sub of this._subs) {\n        sub.query(range, check, res);\n      }\n    }\n    return res;\n  }\n  queryCircle(position, radius, check) {\n    return this.query(new Circle(position.x, position.y, radius), check);\n  }\n  queryRectangle(position, size, check) {\n    return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n  }\n}", "import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = canvasSize => {\n  return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2);\n};\nexport class Particles {\n  constructor(engine, container) {\n    this._applyDensity = (options, manualCount, group) => {\n      if (!options.number.density?.enable) {\n        return;\n      }\n      const numberOptions = options.number,\n        densityFactor = this._initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    };\n    this._initDensityFactor = densityOptions => {\n      const container = this._container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      const canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    };\n    this._pushParticle = (position, overrideOptions, group, initializer) => {\n      try {\n        let particle = this.pool.pop();\n        if (particle) {\n          particle.init(this._nextId, position, overrideOptions, group);\n        } else {\n          particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n        }\n        let canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this._array.push(particle);\n        this._zArray.push(particle);\n        this._nextId++;\n        this._engine.dispatchEvent(\"particleAdded\", {\n          container: this._container,\n          data: {\n            particle\n          }\n        });\n        return particle;\n      } catch (e) {\n        getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n        return;\n      }\n    };\n    this._removeParticle = (index, group, override) => {\n      const particle = this._array[index];\n      if (!particle || particle.group !== group) {\n        return false;\n      }\n      particle.destroy(override);\n      const zIdx = this._zArray.indexOf(particle);\n      this._array.splice(index, 1);\n      this._zArray.splice(zIdx, 1);\n      this.pool.push(particle);\n      this._engine.dispatchEvent(\"particleRemoved\", {\n        container: this._container,\n        data: {\n          particle\n        }\n      });\n      return true;\n    };\n    this._engine = engine;\n    this._container = container;\n    this._nextId = 0;\n    this._array = [];\n    this._zArray = [];\n    this.pool = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this._interactionManager = new InteractionManager(engine, container);\n    const canvasSize = container.canvas.size;\n    this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n    this.movers = this._engine.plugins.getMovers(container, true);\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n  }\n  get count() {\n    return this._array.length;\n  }\n  addManualParticles() {\n    const container = this._container,\n      options = container.actualOptions;\n    for (const particle of options.manualParticles) {\n      this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n    }\n  }\n  addParticle(position, overrideOptions, group, initializer) {\n    const container = this._container,\n      options = container.actualOptions,\n      limit = options.particles.number.limit;\n    if (limit > 0) {\n      const countToRemove = this.count + 1 - limit;\n      if (countToRemove > 0) {\n        this.removeQuantity(countToRemove);\n      }\n    }\n    return this._pushParticle(position, overrideOptions, group, initializer);\n  }\n  clear() {\n    this._array = [];\n    this._zArray = [];\n  }\n  destroy() {\n    this._array = [];\n    this._zArray = [];\n    this.movers = [];\n    this.updaters = [];\n  }\n  async draw(delta) {\n    const container = this._container;\n    container.canvas.clear();\n    await this.update(delta);\n    for (const [, plugin] of container.plugins) {\n      container.canvas.drawPlugin(plugin, delta);\n    }\n    for (const p of this._zArray) {\n      p.draw(delta);\n    }\n  }\n  filter(condition) {\n    return this._array.filter(condition);\n  }\n  find(condition) {\n    return this._array.find(condition);\n  }\n  handleClickMode(mode) {\n    this._interactionManager.handleClickMode(mode);\n  }\n  init() {\n    const container = this._container,\n      options = container.actualOptions;\n    this.lastZIndex = 0;\n    this.needsSort = false;\n    let handled = false;\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n    this._interactionManager.init();\n    for (const [, plugin] of container.plugins) {\n      if (plugin.particlesInitialization !== undefined) {\n        handled = plugin.particlesInitialization();\n      }\n      if (handled) {\n        break;\n      }\n    }\n    this._interactionManager.init();\n    for (const [, pathGenerator] of container.pathGenerators) {\n      pathGenerator.init(container);\n    }\n    this.addManualParticles();\n    if (!handled) {\n      for (const group in options.particles.groups) {\n        const groupOptions = options.particles.groups[group];\n        for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n          this.addParticle(undefined, groupOptions, group);\n        }\n      }\n      for (let i = this.count; i < options.particles.number.value; i++) {\n        this.addParticle();\n      }\n    }\n  }\n  push(nb, mouse, overrideOptions, group) {\n    this.pushing = true;\n    for (let i = 0; i < nb; i++) {\n      this.addParticle(mouse?.position, overrideOptions, group);\n    }\n    this.pushing = false;\n  }\n  async redraw() {\n    this.clear();\n    this.init();\n    await this.draw({\n      value: 0,\n      factor: 0\n    });\n  }\n  remove(particle, group, override) {\n    this.removeAt(this._array.indexOf(particle), undefined, group, override);\n  }\n  removeAt(index, quantity = 1, group, override) {\n    if (index < 0 || index > this.count) {\n      return;\n    }\n    let deleted = 0;\n    for (let i = index; deleted < quantity && i < this.count; i++) {\n      this._removeParticle(i--, group, override) && deleted++;\n    }\n  }\n  removeQuantity(quantity, group) {\n    this.removeAt(0, quantity, group);\n  }\n  setDensity() {\n    const options = this._container.actualOptions,\n      groups = options.particles.groups;\n    for (const group in groups) {\n      this._applyDensity(groups[group], 0, group);\n    }\n    this._applyDensity(options.particles, options.manualParticles.length);\n  }\n  async update(delta) {\n    const container = this._container,\n      particlesToDelete = new Set();\n    this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n    for (const [, pathGenerator] of container.pathGenerators) {\n      pathGenerator.update();\n    }\n    for (const [, plugin] of container.plugins) {\n      plugin.update && plugin.update(delta);\n    }\n    for (const particle of this._array) {\n      const resizeFactor = container.canvas.resizeFactor;\n      if (resizeFactor && !particle.ignoresResizeRatio) {\n        particle.position.x *= resizeFactor.width;\n        particle.position.y *= resizeFactor.height;\n        particle.initialPosition.x *= resizeFactor.width;\n        particle.initialPosition.y *= resizeFactor.height;\n      }\n      particle.ignoresResizeRatio = false;\n      await this._interactionManager.reset(particle);\n      for (const [, plugin] of this._container.plugins) {\n        if (particle.destroyed) {\n          break;\n        }\n        if (plugin.particleUpdate) {\n          plugin.particleUpdate(particle, delta);\n        }\n      }\n      for (const mover of this.movers) {\n        mover.isEnabled(particle) && mover.move(particle, delta);\n      }\n      if (particle.destroyed) {\n        particlesToDelete.add(particle);\n        continue;\n      }\n      this.quadTree.insert(new Point(particle.getPosition(), particle));\n    }\n    if (particlesToDelete.size) {\n      const checkDelete = p => !particlesToDelete.has(p);\n      this._array = this.filter(checkDelete);\n      this._zArray = this._zArray.filter(checkDelete);\n      this.pool.push(...particlesToDelete);\n    }\n    await this._interactionManager.externalInteract(delta);\n    for (const particle of this._array) {\n      for (const updater of this.updaters) {\n        updater.update(particle, delta);\n      }\n      if (!particle.destroyed && !particle.spawning) {\n        await this._interactionManager.particlesInteract(particle, delta);\n      }\n    }\n    delete container.canvas.resizeFactor;\n    if (this.needsSort) {\n      const zArray = this._zArray;\n      zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n      this.lastZIndex = zArray[zArray.length - 1].position.z;\n      this.needsSort = false;\n    }\n  }\n}", "import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n  constructor(container) {\n    this.container = container;\n    this.pixelRatio = 1;\n    this.reduceFactor = 1;\n  }\n  init() {\n    const container = this.container,\n      options = container.actualOptions;\n    this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n    this.reduceFactor = 1;\n    const ratio = this.pixelRatio;\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n    const particles = options.particles,\n      moveOptions = particles.move;\n    this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n    this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n  }\n  initParticle(particle) {\n    const options = particle.options,\n      ratio = this.pixelRatio,\n      moveOptions = options.move,\n      moveDistance = moveOptions.distance,\n      props = particle.retina;\n    props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n    props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n    props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n    props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n    const maxDistance = props.maxDistance;\n    maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n    maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n    props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n  }\n}", "import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n  return {\n    value,\n    factor: smooth ? 60 / fpsLimit : 60 * value / 1000\n  };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n  const options = new Options(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nconst defaultPathGeneratorKey = \"default\",\n  defaultPathGenerator = {\n    generate: p => p.velocity,\n    init: () => {},\n    update: () => {},\n    reset: () => {}\n  };\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this.id = id;\n    this._intersectionManager = entries => {\n      if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n      for (const entry of entries) {\n        if (entry.target !== this.interactivity.element) {\n          continue;\n        }\n        (entry.isIntersecting ? this.play : this.pause)();\n      }\n    };\n    this._nextFrame = async timestamp => {\n      try {\n        if (!this.smooth && this.lastFrameTime !== undefined && timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n          this.draw(false);\n          return;\n        }\n        this.lastFrameTime ??= timestamp;\n        const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n        this.addLifeTime(delta.value);\n        this.lastFrameTime = timestamp;\n        if (delta.value > 1000) {\n          this.draw(false);\n          return;\n        }\n        await this.particles.draw(delta);\n        if (!this.alive()) {\n          this.destroy();\n          return;\n        }\n        if (this.getAnimationStatus()) {\n          this.draw(false);\n        }\n      } catch (e) {\n        getLogger().error(`${errorPrefix} in animation loop`, e);\n      }\n    };\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this._delay = 0;\n    this._duration = 0;\n    this._lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(entries => this._intersectionManager(entries));\n    }\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const pxRatio = this.retina.pixelRatio,\n        posRetina = {\n          x: pos.x * pxRatio,\n          y: pos.y * pxRatio\n        },\n        particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const mouseEvent = e,\n        pos = {\n          x: mouseEvent.offsetX || mouseEvent.clientX,\n          y: mouseEvent.offsetY || mouseEvent.clientY\n        };\n      clickOrTouchHandler(e, pos, 1);\n    };\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = true;\n      touchMoved = false;\n    };\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touchMoved = true;\n    };\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n          if (!lastTouch) {\n            return;\n          }\n        }\n        const element = this.canvas.element,\n          canvasRect = element ? element.getBoundingClientRect() : undefined,\n          pos = {\n            x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n            y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n          };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    let touched = false,\n      touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n  addLifeTime(value) {\n    this._lifeTime += value;\n  }\n  addPath(key, generator, override = false) {\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n    return true;\n  }\n  alive() {\n    return !this._duration || this._lifeTime <= this._duration;\n  }\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const [, drawer] of this.drawers) {\n      drawer.destroy && drawer.destroy(this);\n    }\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n    this._engine.plugins.destroy(this);\n    this.destroyed = true;\n    const mainArr = this._engine.dom(),\n      idx = mainArr.findIndex(t => t === this);\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    this._drawAnimationFrame = requestAnimationFrame(async timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      await this._nextFrame(timestamp);\n    });\n  }\n  async export(type, options = {}) {\n    for (const [, plugin] of this.plugins) {\n      if (!plugin.export) {\n        continue;\n      }\n      const res = await plugin.export(type, options);\n      if (!res.supported) {\n        continue;\n      }\n      return res.blob;\n    }\n    getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n  }\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const [, plugin] of this.plugins) {\n      plugin.handleClickMode && plugin.handleClickMode(mode);\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const shapes = this._engine.plugins.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.plugins.getShapeDrawer(type);\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n    this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n    this._lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n    this.smooth = this.actualOptions.smooth;\n    for (const [, drawer] of this.drawers) {\n      drawer.init && (await drawer.init(this));\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.init && (await plugin.init());\n    }\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n    this.particles.init();\n    this.particles.setDensity();\n    for (const [, plugin] of this.plugins) {\n      plugin.particlesSetup && plugin.particlesSetup();\n    }\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimationFrame(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.pause && plugin.pause();\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n    this.draw(needsUpdate || false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._initialSourceOptions = undefined;\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    return this.refresh();\n  }\n  setNoise(noiseOrGenerator, init, update) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.setPath(noiseOrGenerator, init, update);\n  }\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator || !guardCheck(this)) {\n      return;\n    }\n    const pathGenerator = {\n      ...defaultPathGenerator\n    };\n    if (isFunction(pathOrGenerator)) {\n      pathGenerator.generate = pathOrGenerator;\n      if (init) {\n        pathGenerator.init = init;\n      }\n      if (update) {\n        pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = pathGenerator;\n      pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n      pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n      pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n    }\n    this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      this._delayTimeout = setTimeout(async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n          plugin.start && (await plugin.start());\n        }\n        this._engine.dispatchEvent(\"containerStarted\", {\n          container: this\n        });\n        this.play();\n        resolve();\n      }, this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const [, plugin] of this.plugins) {\n      plugin.stop && plugin.stop();\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this.responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this.responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n}", "export class EventDispatcher {\n  constructor() {\n    this._listeners = new Map();\n  }\n  addEventListener(type, listener) {\n    this.removeEventListener(type, listener);\n    let arr = this._listeners.get(type);\n    if (!arr) {\n      arr = [];\n      this._listeners.set(type, arr);\n    }\n    arr.push(listener);\n  }\n  dispatchEvent(type, args) {\n    const listeners = this._listeners.get(type);\n    listeners && listeners.forEach(handler => handler(args));\n  }\n  hasEventListener(type) {\n    return !!this._listeners.get(type);\n  }\n  removeAllEventListeners(type) {\n    if (!type) {\n      this._listeners = new Map();\n    } else {\n      this._listeners.delete(type);\n    }\n  }\n  removeEventListener(type, listener) {\n    const arr = this._listeners.get(type);\n    if (!arr) {\n      return;\n    }\n    const length = arr.length,\n      idx = arr.indexOf(listener);\n    if (idx < 0) {\n      return;\n    }\n    if (length === 1) {\n      this._listeners.delete(type);\n    } else {\n      arr.splice(idx, 1);\n    }\n  }\n}", "import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n  let res = map.get(container);\n  if (!res || force) {\n    res = [...initializers.values()].map(t => t(container));\n    map.set(container, res);\n  }\n  return res;\n}\nexport class Plugins {\n  constructor(engine) {\n    this._engine = engine;\n    this.plugins = [];\n    this._initializers = {\n      interactors: new Map(),\n      movers: new Map(),\n      updaters: new Map()\n    };\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.drawers = new Map();\n    this.pathGenerators = new Map();\n  }\n  addInteractor(name, initInteractor) {\n    this._initializers.interactors.set(name, initInteractor);\n  }\n  addParticleMover(name, initMover) {\n    this._initializers.movers.set(name, initMover);\n  }\n  addParticleUpdater(name, initUpdater) {\n    this._initializers.updaters.set(name, initUpdater);\n  }\n  addPathGenerator(type, pathGenerator) {\n    !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n  }\n  addPlugin(plugin) {\n    !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n  }\n  addPreset(presetKey, options, override = false) {\n    (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n  }\n  addShapeDrawer(types, drawer) {\n    executeOnSingleOrMultiple(types, type => {\n      !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n    });\n  }\n  destroy(container) {\n    this.updaters.delete(container);\n    this.movers.delete(container);\n    this.interactors.delete(container);\n  }\n  getAvailablePlugins(container) {\n    const res = new Map();\n    for (const plugin of this.plugins) {\n      plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n    }\n    return res;\n  }\n  getInteractors(container, force = false) {\n    return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n  }\n  getMovers(container, force = false) {\n    return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n  }\n  getPathGenerator(type) {\n    return this.pathGenerators.get(type);\n  }\n  getPlugin(plugin) {\n    return this.plugins.find(t => t.id === plugin);\n  }\n  getPreset(preset) {\n    return this.presets.get(preset);\n  }\n  getShapeDrawer(type) {\n    return this.drawers.get(type);\n  }\n  getSupportedShapes() {\n    return this.drawers.keys();\n  }\n  getUpdaters(container, force = false) {\n    return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n  }\n  loadOptions(options, sourceOptions) {\n    for (const plugin of this.plugins) {\n      plugin.loadOptions(options, sourceOptions);\n    }\n  }\n  loadParticlesOptions(container, options, ...sourceOptions) {\n    const updaters = this.updaters.get(container);\n    if (!updaters) {\n      return;\n    }\n    for (const updater of updaters) {\n      updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n    }\n  }\n}", "import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n  const url = itemFromSingleOrMultiple(data.url, data.index);\n  if (!url) {\n    return data.fallback;\n  }\n  const response = await fetch(url);\n  if (response.ok) {\n    return response.json();\n  }\n  getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n  return data.fallback;\n}\nfunction isParamsEmpty(params) {\n  return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n  return !isParamsEmpty(obj);\n}\nexport class Engine {\n  constructor() {\n    this._configs = new Map();\n    this._domArray = [];\n    this._eventDispatcher = new EventDispatcher();\n    this._initialized = false;\n    this.plugins = new Plugins(this);\n  }\n  get configs() {\n    const res = {};\n    for (const [name, config] of this._configs) {\n      res[name] = config;\n    }\n    return res;\n  }\n  get version() {\n    return \"2.12.0\";\n  }\n  addConfig(nameOrConfig, config) {\n    if (isString(nameOrConfig)) {\n      if (config) {\n        config.name = nameOrConfig;\n        this._configs.set(nameOrConfig, config);\n      }\n    } else {\n      this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n    }\n  }\n  addEventListener(type, listener) {\n    this._eventDispatcher.addEventListener(type, listener);\n  }\n  async addInteractor(name, interactorInitializer, refresh = true) {\n    this.plugins.addInteractor(name, interactorInitializer);\n    await this.refresh(refresh);\n  }\n  async addMover(name, moverInitializer, refresh = true) {\n    this.plugins.addParticleMover(name, moverInitializer);\n    await this.refresh(refresh);\n  }\n  async addParticleUpdater(name, updaterInitializer, refresh = true) {\n    this.plugins.addParticleUpdater(name, updaterInitializer);\n    await this.refresh(refresh);\n  }\n  async addPathGenerator(name, generator, refresh = true) {\n    this.plugins.addPathGenerator(name, generator);\n    await this.refresh(refresh);\n  }\n  async addPlugin(plugin, refresh = true) {\n    this.plugins.addPlugin(plugin);\n    await this.refresh(refresh);\n  }\n  async addPreset(preset, options, override = false, refresh = true) {\n    this.plugins.addPreset(preset, options, override);\n    await this.refresh(refresh);\n  }\n  async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n    let customDrawer;\n    let realRefresh = refresh,\n      realInit,\n      realAfterEffect,\n      realDestroy;\n    if (isBoolean(initOrRefresh)) {\n      realRefresh = initOrRefresh;\n      realInit = undefined;\n    } else {\n      realInit = initOrRefresh;\n    }\n    if (isBoolean(afterEffectOrRefresh)) {\n      realRefresh = afterEffectOrRefresh;\n      realAfterEffect = undefined;\n    } else {\n      realAfterEffect = afterEffectOrRefresh;\n    }\n    if (isBoolean(destroyOrRefresh)) {\n      realRefresh = destroyOrRefresh;\n      realDestroy = undefined;\n    } else {\n      realDestroy = destroyOrRefresh;\n    }\n    if (isFunction(drawer)) {\n      customDrawer = {\n        afterEffect: realAfterEffect,\n        destroy: realDestroy,\n        draw: drawer,\n        init: realInit\n      };\n    } else {\n      customDrawer = drawer;\n    }\n    this.plugins.addShapeDrawer(shape, customDrawer);\n    await this.refresh(realRefresh);\n  }\n  dispatchEvent(type, args) {\n    this._eventDispatcher.dispatchEvent(type, args);\n  }\n  dom() {\n    return this._domArray;\n  }\n  domItem(index) {\n    const dom = this.dom(),\n      item = dom[index];\n    if (!item || item.destroyed) {\n      dom.splice(index, 1);\n      return;\n    }\n    return item;\n  }\n  init() {\n    if (this._initialized) {\n      return;\n    }\n    this._initialized = true;\n  }\n  async load(tagIdOrOptionsOrParams, options) {\n    return this.loadFromArray(tagIdOrOptionsOrParams, options);\n  }\n  async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n    let params;\n    if (!isParams(tagIdOrOptionsOrParams)) {\n      params = {};\n      if (isString(tagIdOrOptionsOrParams)) {\n        params.id = tagIdOrOptionsOrParams;\n      } else {\n        params.options = tagIdOrOptionsOrParams;\n      }\n      if (isNumber(optionsOrIndex)) {\n        params.index = optionsOrIndex;\n      } else {\n        params.options = optionsOrIndex ?? params.options;\n      }\n      params.index = index ?? params.index;\n    } else {\n      params = tagIdOrOptionsOrParams;\n    }\n    return this._loadParams(params);\n  }\n  async loadJSON(tagId, pathConfigJson, index) {\n    let url, id;\n    if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = pathConfigJson;\n    }\n    return this._loadParams({\n      id: id,\n      url,\n      index\n    });\n  }\n  async refresh(refresh = true) {\n    if (!refresh) {\n      return;\n    }\n    this.dom().forEach(t => t.refresh());\n  }\n  removeEventListener(type, listener) {\n    this._eventDispatcher.removeEventListener(type, listener);\n  }\n  async set(id, element, options, index) {\n    const params = {\n      index\n    };\n    if (isString(id)) {\n      params.id = id;\n    } else {\n      params.element = id;\n    }\n    if (element instanceof HTMLElement) {\n      params.element = element;\n    } else {\n      params.options = element;\n    }\n    if (isNumber(options)) {\n      params.index = options;\n    } else {\n      params.options = options ?? params.options;\n    }\n    return this._loadParams(params);\n  }\n  async setJSON(id, element, pathConfigJson, index) {\n    const params = {};\n    if (id instanceof HTMLElement) {\n      params.element = id;\n      params.url = element;\n      params.index = pathConfigJson;\n    } else {\n      params.id = id;\n      params.element = element;\n      params.url = pathConfigJson;\n      params.index = index;\n    }\n    return this._loadParams(params);\n  }\n  setOnClickHandler(callback) {\n    const dom = this.dom();\n    if (!dom.length) {\n      throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n    }\n    for (const domItem of dom) {\n      domItem.addClickHandler(callback);\n    }\n  }\n  async _loadParams(params) {\n    const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`,\n      {\n        index,\n        url\n      } = params,\n      options = url ? await getDataFromUrl({\n        fallback: params.options,\n        url,\n        index\n      }) : params.options;\n    let domContainer = params.element ?? document.getElementById(id);\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = id;\n      document.body.append(domContainer);\n    }\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n      dom = this.dom(),\n      oldIndex = dom.findIndex(v => v.id === id);\n    if (oldIndex >= 0) {\n      const old = this.domItem(oldIndex);\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n    let canvasEl;\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[generatedAttribute] = \"true\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = \"100%\";\n    }\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = \"100%\";\n    }\n    const newItem = new Container(this, id, currentOptions);\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n}", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n  constructor() {\n    this.key = \"hsl\";\n    this.stringPrefix = \"hsl\";\n  }\n  handleColor(color) {\n    const colorValue = color.value,\n      hslColor = colorValue.hsl ?? color.value;\n    if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n      return hslToRgb(hslColor);\n    }\n  }\n  handleRangeColor(color) {\n    const colorValue = color.value,\n      hslColor = colorValue.hsl ?? color.value;\n    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n      return hslToRgb({\n        h: getRangeValue(hslColor.h),\n        l: getRangeValue(hslColor.l),\n        s: getRangeValue(hslColor.s)\n      });\n    }\n  }\n  parseString(input) {\n    if (!input.startsWith(\"hsl\")) {\n      return;\n    }\n    const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i,\n      result = regex.exec(input);\n    return result ? hslaToRgba({\n      a: result.length > 4 ? parseAlpha(result[5]) : 1,\n      h: parseInt(result[1], 10),\n      l: parseInt(result[3], 10),\n      s: parseInt(result[2], 10)\n    }) : undefined;\n  }\n}", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n  constructor() {\n    this.key = \"rgb\";\n    this.stringPrefix = \"rgb\";\n  }\n  handleColor(color) {\n    const colorValue = color.value,\n      rgbColor = colorValue.rgb ?? color.value;\n    if (rgbColor.r !== undefined) {\n      return rgbColor;\n    }\n  }\n  handleRangeColor(color) {\n    const colorValue = color.value,\n      rgbColor = colorValue.rgb ?? color.value;\n    if (rgbColor.r !== undefined) {\n      return {\n        r: getRangeValue(rgbColor.r),\n        g: getRangeValue(rgbColor.g),\n        b: getRangeValue(rgbColor.b)\n      };\n    }\n  }\n  parseString(input) {\n    if (!input.startsWith(this.stringPrefix)) {\n      return;\n    }\n    const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i,\n      result = regex.exec(input);\n    return result ? {\n      a: result.length > 4 ? parseAlpha(result[5]) : 1,\n      b: parseInt(result[3], 10),\n      g: parseInt(result[2], 10),\n      r: parseInt(result[1], 10)\n    } : undefined;\n  }\n}", "import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n  const rgbColorManager = new RgbColorManager(),\n    hslColorManager = new HslColorManager();\n  addColorManager(rgbColorManager);\n  addColorManager(hslColorManager);\n  const engine = new Engine();\n  engine.init();\n  return engine;\n}", "import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n  window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };", "import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, Inject, Input, Output, NgModule } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Subject, from, mergeMap, EMPTY, takeUntil } from 'rxjs';\nimport { tsParticles } from 'tsparticles-engine';\nclass NgParticlesComponent {\n  platformId;\n  options;\n  url;\n  id;\n  particlesInit;\n  particlesLoaded = new EventEmitter();\n  destroy$ = new Subject();\n  container;\n  constructor(platformId) {\n    this.platformId = platformId;\n    this.id = 'tsparticles';\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const cb = container => {\n      this.container = container;\n      this.particlesLoaded.emit(container);\n    };\n    from(this.particlesInit ? this.particlesInit(tsParticles) : Promise.resolve()).pipe(mergeMap(() => {\n      if (this.url) {\n        return tsParticles.loadJSON(this.id, this.url);\n      } else if (this.options) {\n        return tsParticles.load(this.id, this.options);\n      } else {\n        console.error('You must specify options or url to load tsParticles');\n        return EMPTY;\n      }\n    }), takeUntil(this.destroy$)).subscribe(cb);\n  }\n  ngOnDestroy() {\n    this.container?.destroy();\n    this.destroy$.next();\n  }\n  static ɵfac = function NgParticlesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgParticlesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgParticlesComponent,\n    selectors: [[\"ng-particles\"]],\n    inputs: {\n      options: \"options\",\n      url: \"url\",\n      id: \"id\",\n      particlesInit: \"particlesInit\"\n    },\n    outputs: {\n      particlesLoaded: \"particlesLoaded\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function NgParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgParticlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-particles',\n      template: '<div [id]=\"id\"></div>'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    particlesInit: [{\n      type: Input\n    }],\n    particlesLoaded: [{\n      type: Output\n    }]\n  });\n})();\nclass ParticlesComponent extends NgParticlesComponent {\n  platformId;\n  constructor(platformId) {\n    super(platformId);\n    this.platformId = platformId;\n  }\n  static ɵfac = function ParticlesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ParticlesComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ParticlesComponent,\n    selectors: [[\"Particles\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function ParticlesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.id);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ParticlesComponent, [{\n    type: Component,\n    args: [{\n      selector: 'Particles',\n      template: '<div [id]=\"id\"></div>'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\nclass NgParticlesModule {\n  static ɵfac = function NgParticlesModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgParticlesModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgParticlesModule,\n    declarations: [NgParticlesComponent, ParticlesComponent],\n    exports: [NgParticlesComponent, ParticlesComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgParticlesModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgParticlesComponent, ParticlesComponent],\n      exports: [NgParticlesComponent, ParticlesComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-particles\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgParticlesComponent, NgParticlesModule, ParticlesComponent };\n"],
  "mappings": "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",
  "names": ["trail", "container", "theme", "container", "position", "capacity", "container", "init"]
}
